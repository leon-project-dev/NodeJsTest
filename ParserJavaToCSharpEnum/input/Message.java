package org.cyanspring.business.message;

import org.cyanspring.common.LangDef;
import org.cyanspring.common.SystemDefault;
import org.cyanspring.common.message.MessageType;

import java.util.HashMap;
import java.util.Map;

public enum Message {
	// 0 - 10000 reserved
    OK(0, MessageType.INFO, new String[][]{{LangDef.EN.getValue(), "OK"},
        {LangDef.ZH.getValue(), "成功"},
        {LangDef.ZHHK.getValue(), "成功"}}),
    FAILED(1, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "FAILED"},
        {LangDef.ZH.getValue(), "失败"},
        {LangDef.ZHHK.getValue(), "失敗"}}),
    NONE(2, MessageType.INFO, new String[][]{{LangDef.EN.getValue(), "NONE"},
        {LangDef.ZH.getValue(), "不存在"},
        {LangDef.ZHHK.getValue(), "不存在"}}),

	// end enum
    
    // 50000 for general message
    MISSING_FIELDS(50001, MessageType.ERROR, 
    		new String[][]{{LangDef.EN.getValue(), "Missing compulsory fields"}, 
			{LangDef.ZH.getValue(), "缺失必填栏位"},
			{LangDef.ZHHK.getValue(), "缺失必填欄位"}}),
    FIELDS_INCORRECT(50002, MessageType.ERROR, 
    		new String[][]{{LangDef.EN.getValue(), "Fields incorrect"},
			{LangDef.ZH.getValue(), "栏位错误"},
			{LangDef.ZHHK.getValue(), "欄位錯誤"}}),
    UNIQUE_KEY_DUPLICATE(50003, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Unique key duplicate or wrong"},
			{LangDef.ZH.getValue(), "唯一约束重复或者错误"},
			{LangDef.ZHHK.getValue(), "Unique key重複或者錯誤"}}),
    SYSTEM_OFFLINE(50004, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "System is temporarily unavailable"},
			{LangDef.ZH.getValue(), "系统暂时无法使用"},
			{LangDef.ZHHK.getValue(), "系統暫時無法使用"}}),
    ACTION_TOO_FAST(50005, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Action is too fast"}, 
			{LangDef.ZH.getValue(), "动作太快"},
			{LangDef.ZHHK.getValue(), "動作太快"}}),
    UNAUTHORISED(50006, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Unauthorised"}, 
			{LangDef.ZH.getValue(), "无权限操作"},
			{LangDef.ZHHK.getValue(), "無權限操作"}}),
    NO_RIGHT(50007, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "No right"}, 
			{LangDef.ZH.getValue(), "没有权限"},
			{LangDef.ZHHK.getValue(), "沒有權限"}}),
    VALUE_LARGE_EQUAL_ZERO(50008, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Value must be equal to or larger than 0"},
			{LangDef.ZH.getValue(), "需要等于或大于0"},
			{LangDef.ZHHK.getValue(), "需要等於或大於0"}}),
    VALUE_LARGE_ZERO(50009, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Value must be larger than 0"},
			{LangDef.ZH.getValue(), "数值需要大于0"},
			{LangDef.ZHHK.getValue(), "數值需要大於0"}}),
    VALUE_LESS_EQUAL_ZERO(50010, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Value must be equal to or less than 0"},
			{LangDef.ZH.getValue(), "需要等于或小于0"},
			{LangDef.ZHHK.getValue(), "需要等於或小於0"}}),
    VALUE_LESS_ZERO(50011, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Value must be less than 0"},
			{LangDef.ZH.getValue(), "数值需要小于0"},
			{LangDef.ZHHK.getValue(), "數值需要小於0"}}),
    VALUE_NOT_EQUAL_ZERO(50012, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Value must not be equal 0"},
			{LangDef.ZH.getValue(), "数值不能等于0"},
			{LangDef.ZHHK.getValue(), "數值不能等於0"}}),
	INVALID_DOCUMENT_FORMAT(50013, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Invalid document format"},
			{LangDef.ZH.getValue(), "文件格式不正确"},
			{LangDef.ZHHK.getValue(), "文件格式不正確"}}),
	DOCUMENT_SIZE_TOO_LARGE(50014, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The document size is too large"},
			{LangDef.ZH.getValue(), "上传文件太大"},
			{LangDef.ZHHK.getValue(), "上傳文件太大"}}),
	UPLOAD_DOCUMENT_FAILED(50015, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Upload document failed"},
			{LangDef.ZH.getValue(), "上传文件失败"},
			{LangDef.ZHHK.getValue(), "上傳文件失敗"}}),
	DOCUMENT_NOT_FOUND(50016, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Document not found"},
			{LangDef.ZH.getValue(), "找不到文档"},
			{LangDef.ZHHK.getValue(), "找不到文檔"}}),
	DELETE_DOCUMENT_FAILED(50017, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Delete document failed"},
			{LangDef.ZH.getValue(), "删除文档失败"},
			{LangDef.ZHHK.getValue(), "刪除文檔失敗"}}),
	CLIENT_ID_NOT_FOUND(50018, MessageType.ERROR,
    		new String[][]{{LangDef.EN.getValue(), "Client ID not found."},
			{LangDef.ZH.getValue(), "未找到客户ID。"},
			{LangDef.ZHHK.getValue(), "未找到客戶ID。"}}),
	MISSING_PDF_TYPE(50019, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Missing pdf type"},
			{LangDef.ZH.getValue(), "缺少pdf类型"},
			{LangDef.ZHHK.getValue(), "缺少pdf類型"}}),
	MISSING_DOCUMENT_FILE(50020, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing document file"},
			{LangDef.ZH.getValue(), "缺少文件"},
			{LangDef.ZHHK.getValue(), "缺少文件"}}),
	FIELD_TOO_LONG(50021, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Field too long"},
			{LangDef.ZH.getValue(), "栏位过长"},
			{LangDef.ZHHK.getValue(), "欄位過長"}}),
	ACTION_IN_PROGRESS(50022, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Action still in progress"},
			{LangDef.ZH.getValue(), "动作仍在处理中"},
			{LangDef.ZHHK.getValue(), "動作仍在處理中"}}),
	FIELD_ARGUMENT_INCORRECT(50023, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Field argument incorrect"},
			{LangDef.ZH.getValue(), "栏位参数不正确"},
			{LangDef.ZHHK.getValue(), "欄位參數不正確"}}),
	// downstream error
	DOWN_STREAM_MAINTENANCE(50024, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream system is under maintenance"},
			{LangDef.ZH.getValue(), "下游系统维护中"},
			{LangDef.ZHHK.getValue(), "下游系統維護中"}}),
	DOWN_STREAM_EXCEPTION(50025, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Exception occurred in downstream"},
			{LangDef.ZH.getValue(), "下游发生异常"},
			{LangDef.ZHHK.getValue(), "下游發生異常"}}),
	DOWN_STREAM_CONN_ID_EXIST(50026, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream id already exists"},
			{LangDef.ZH.getValue(), "下游 id 已经存在"},
			{LangDef.ZHHK.getValue(), "下游 id 已經存在"}}),
	DOWN_STREAM_CONN_DOWN(50027, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream system is down"},
			{LangDef.ZH.getValue(), "下游系统已关闭"},
			{LangDef.ZHHK.getValue(), "下游系統已關閉"}}),
    DOWN_STREAM_SENDER_NOT_AVAILABLE(50028, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream sender not available"},
    		{LangDef.ZH.getValue(), "下游的发送者不可用"},
    		{LangDef.ZHHK.getValue(), "下游的發送者不可用"}}),
    DOWN_STREAM_ADAPTOR_NOT_AVAILABLE(50029, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream adaptor not available"},
			{LangDef.ZH.getValue(), "下游适配器失效"},
			{LangDef.ZHHK.getValue(), "下游適配器失效"}}),
    DOWN_STREAM_LISTENER_RESET(50030, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream listener can be only set once"},
			{LangDef.ZH.getValue(), "下游监听器重置"},
			{LangDef.ZHHK.getValue(), "下游監聽器重置"}}),
    DOWN_STREAM_INSTRUMENT_SETTING_NOT_FOUND(50031, MessageType.ERROR,
            new String[][]{{LangDef.EN.getValue(), "Downstream instrument settings not found"},
			{LangDef.ZH.getValue(), "下游货币对未发现"},
			{LangDef.ZHHK.getValue(), "下游貨幣對未發現"}}),
    DOWN_STREAM_ACTION_NOT_SUPPORT(50032, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Downstream action not supported"},
			{LangDef.ZH.getValue(), "下游不支持该行为"},
			{LangDef.ZHHK.getValue(), "下游不支持該行為"}}),
    
    FILE_PARSE_ERROR(50050, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "File parse error"},
			{LangDef.ZH.getValue(), "文件解析错误"},
			{LangDef.ZHHK.getValue(), "文件解析錯誤"}}),
    UNSUPPORTED_CURRENCY(50051, MessageType.ERROR, 
    		new String[][]{{LangDef.EN.getValue(), "The currency is not supported"},
			{LangDef.ZH.getValue(), "不支持该货币"},
			{LangDef.ZHHK.getValue(), "不支持該貨幣"}}),
    REQUEST_TIMEOUT(50052, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Server request timeout. Please try again later."},
			{LangDef.ZH.getValue(), "服务器请求超时，请稍后再试"},
			{LangDef.ZHHK.getValue(), "服務器請求超時，請稍後再試"}}),
    UPDATE_RECORD_CONFLICT(50053, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The record was changed. Please refresh and try again"},
			{LangDef.ZH.getValue(), "该记录已被更改。 请刷新并重试"},
			{LangDef.ZHHK.getValue(), "該記錄已被更改。 請刷新並重試"}}),
    
	// 30000 - 30100 for as

	LOGIN_VO_NULL(30001, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Login VO must not be null"},
					{LangDef.ZH.getValue(), "登录VO不能为空"},
					{LangDef.ZHHK.getValue(), "登錄VO不能為空"}}),
	INCORRECT_USER_OR_PASSWORD(30002, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Username or password incorrect"},
					{LangDef.ZH.getValue(), "用户名或密码不正确"},
					{LangDef.ZHHK.getValue(), "用戶名或密碼不正確"}}),
	ACCOUNT_IS_UNAVAILABLE(30003, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Account is unavailable"},
					{LangDef.ZH.getValue(), "帐户无法使用"},
					{LangDef.ZHHK.getValue(), "帳戶無法使用"}}),
	ACCOUNT_NOT_EXIST(30004, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Account does not exist"},
					{LangDef.ZH.getValue(), "帐户不存在"},
					{LangDef.ZHHK.getValue(), "帳戶不存在"}}),
	REFRESH_TOKEN_EXPIRED(30005, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "refresh token is expired"},
					{LangDef.ZH.getValue(), "刷新令牌已过期"},
					{LangDef.ZHHK.getValue(), "刷新令牌已過期"}}),
	CANNOT_READ_RSA_KEY_FILE(30006, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cannot read RSA public/private key from files"},
					{LangDef.ZH.getValue(), "不能从文件中读取RSA公钥/私钥"},
					{LangDef.ZHHK.getValue(), "不能從文件中讀取RSA公鑰/私鑰"}}),
	TOKEN_EXPIRED(30007, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The access token expired"},
					{LangDef.ZH.getValue(), "访问令牌过期"},
					{LangDef.ZHHK.getValue(), "訪問令牌過期"}}),
	INVALID_TOKEN(30008, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The access token is invalid"},
					{LangDef.ZH.getValue(), "访问令牌是无效的"},
					{LangDef.ZHHK.getValue(), "訪問令牌是無效的"}}),
	NEW_PW_OLD_PW_CANNOT_SAME(30009, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "New password cannot be same as old passwords"},
					{LangDef.ZH.getValue(), "新密码不能与旧密码相同"},
					{LangDef.ZHHK.getValue(), "新密碼不能與舊密碼相同"}}),
	LOGIN_EXCEED_RATE_LIMIT(30010, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Exceed login rate limit"},
					{LangDef.ZH.getValue(), "超过登录速率限制"},
					{LangDef.ZHHK.getValue(), "超過登入速率限制"}}),
	PW_FORMAT_INCORRECT(30011, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Incorrect password format, password should contains letters,number and special character"},
					{LangDef.ZH.getValue(), "pw格式不正确，pw应该包含字母、数字和特殊字符。"},
					{LangDef.ZHHK.getValue(), "pw格式不正確，pw應該包含字母、數字和特殊字符。"}}),
	INVALID_VERIFICATION_CODE(30012, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The verification code is incorrect"},
					{LangDef.ZH.getValue(), "验证码不正确"},
					{LangDef.ZHHK.getValue(), "驗證碼不正確"}}),
	ACCOUNT_IS_LOCKED(30013, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Account is locked, please click Forgot password to unlock"},
					{LangDef.ZH.getValue(), "帐户被锁定，请点击忘记密码以解锁"},
					{LangDef.ZHHK.getValue(), "帳戶被鎖定，請點擊忘記密碼以解鎖"}}),
	SOCIAL_USER_NOT_EXIST(30014, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Social user not exists"},
					{LangDef.ZH.getValue(), "社会用户不存在"},
					{LangDef.ZHHK.getValue(), "社會用戶不存在"}}),
	OAUTH_LOGIN_FAIL(30015, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "OAuth login fail"},
					{LangDef.ZH.getValue(), "OAuth登录失败"},
					{LangDef.ZHHK.getValue(), "OAuth登錄失敗"}}),
	INCORRECT_LOGIN_TYPE(30016, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Incorrect login type"},
					{LangDef.ZH.getValue(), "登录类型不正确"},
					{LangDef.ZHHK.getValue(), "登錄類型不正確"}}),
	REFRESH_TOKEN_EXCEED_RATE_LIMIT(30017, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Exceed refresh token rate limit"},
					{LangDef.ZH.getValue(), "超出刷新令牌速率限制"},
					{LangDef.ZHHK.getValue(), "超出刷新令牌速率限制"}}),
	EMAIL_ALREADY_REGISTERED(30018, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The email has already been registered"},
					{LangDef.ZH.getValue(), "该电子邮件已被注册"},
					{LangDef.ZHHK.getValue(), "該電子郵件已被註冊"}}),
	EMAIL_NOT_REGISTERED(30019, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The email has not been registered"},
					{LangDef.ZH.getValue(), "该电子邮件未被注册"},
					{LangDef.ZHHK.getValue(), "該電子郵件未被註冊"}}),
	PHONE_NOT_REGISTERED(30020, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The phone number has not been registered"},
					{LangDef.ZH.getValue(), "该电话号码未被注册"},
					{LangDef.ZHHK.getValue(), "該電話號碼未被註冊"}}),
	INCORRECT_VERIFICATION_ACTION(30021, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The verification action is incorrect"},
					{LangDef.ZH.getValue(), "核查行动是不正确的"},
					{LangDef.ZHHK.getValue(), "核查行動是不正確的"}}),
	REACH_VERIFICATION_LIMIT(30022, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "System verification limit reached"},
					{LangDef.ZH.getValue(), "达到系统验证限制"},
					{LangDef.ZHHK.getValue(), "達到系統驗證限制"}}),
	PHONE_ALREADY_REGISTERED(30023, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The phone number is already registered"},
					{LangDef.ZH.getValue(), "该电话号码已被注册"},
					{LangDef.ZHHK.getValue(), "該電話號碼已被註冊"}}),
	OAUTH_CANNOT_RESET_PW(30024, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "User cannot reset oAuth email password"},
					{LangDef.ZH.getValue(), "用户无法重设oAuth电子邮件密码"},
					{LangDef.ZHHK.getValue(), "用戶無法重設oAuth電子郵件密碼"}}),
	TRADING_PW_ALREADY_SETUP(30025, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading password is already setup"},
					{LangDef.ZH.getValue(), "交易密码设置完成"},
					{LangDef.ZHHK.getValue(), "交易密碼設置完成"}}),
	TRADING_PW_NOT_SETUP(30026, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading password is not setup"},
					{LangDef.ZH.getValue(), "交易密码尚未设置"},
					{LangDef.ZHHK.getValue(), "交易密碼尚未設置"}}),
	INVALID_TRADING_PW(30027, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The trading password is invalid"},
					{LangDef.ZH.getValue(), "无效的交易密码"},
					{LangDef.ZHHK.getValue(), "無效的交易密碼"}}),
	INVALID_SESSION_ID(30028, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The session Id is invalid"},
					{LangDef.ZH.getValue(), "会话 ID 无效"},
					{LangDef.ZHHK.getValue(), "會話 ID 無效"}}),
	REGISTRATION_SESSION_EXPIRE(30029, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The registration session has expired"},
					{LangDef.ZH.getValue(), "注册会话已过期"},
					{LangDef.ZHHK.getValue(), "註冊會話已過期"}}),
	RESET_PW_SESSION_EXPIRE(30030, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The reset password session has expired"},
					{LangDef.ZH.getValue(), "重置密码会话已过期"},
					{LangDef.ZHHK.getValue(), "重置密碼會話已過期"}}),
	DEVICES_REACH_LIMIT(30031, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client devices linkage reached limit"},
					{LangDef.ZH.getValue(), "客户端设备已达到极限"},
					{LangDef.ZHHK.getValue(), "客戶端設備已達到極限"}}),
	DEVICE_LINKAGE_NOT_FOUND(30032, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "User device linkage not found"},
					{LangDef.ZH.getValue(), "用户设备链接未找到"},
					{LangDef.ZHHK.getValue(), "用戶設備連結未找到"}}),
	INVALID_EMAIL(30033, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The email is invalid"}, 
					{LangDef.ZH.getValue(), "该电子邮件是无效的"},
					{LangDef.ZHHK.getValue(), "該電子郵件是無效的"}}),
	MANDATORY_DEVICE(30034, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Device id or type is null"},
					{LangDef.ZH.getValue(), "设备ID或类型为空"},
					{LangDef.ZHHK.getValue(), "設備ID或類型為空"}}),
	REVOKE_VERIFICATION_CODE(30035, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The verification code is incorrect and has been revoked"},
				{LangDef.ZH.getValue(), "验证码不正确，已被撤销"},
				{LangDef.ZHHK.getValue(), "驗證碼不正確，已被撤銷"}}),
	ACCOUNT_ALREADY_BOUND_EMAIL(30036, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The client has already bound email, please contact CS to update"},
					{LangDef.ZH.getValue(), "帐户已绑定邮箱，请联系客服更新"},
					{LangDef.ZHHK.getValue(), "帳戶已綁定郵箱，請聯繫客服更新"}}),
	BIND_EMAIL_SESSION_EXPIRE(30037, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The email binding session has expired"},
					{LangDef.ZH.getValue(), "电子邮件绑定会话已过期"},
					{LangDef.ZHHK.getValue(), "電子郵件綁定會話已過期"}}),
	ACCOUNT_ALREADY_BOUND_PHONE(30038, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The account has already bound Phone, please contact CS to update"},
					{LangDef.ZH.getValue(), "帐户已经绑定了电话，请联系CS更新"},
					{LangDef.ZHHK.getValue(), "帳戶已經綁定了電話，請聯繫CS更新"}}),
	BIND_SMS_SESSION_EXPIRE(30039, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The sms binding session has expired"},
					{LangDef.ZH.getValue(), "短信绑定会话已过期"},
					{LangDef.ZHHK.getValue(), "短信綁定會話已過期"}}),
	INVALID_TRADING_SESSION_ID(30040, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The trading session id is invalid"},
			{LangDef.ZH.getValue(), "交易时段ID是无效的"},
			{LangDef.ZHHK.getValue(), "交易時段ID是無效的"}}),
	TRADING_PW_LOCKED(30041, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading password has been locked"},
			{LangDef.ZH.getValue(), "交易密码已被锁定"},
			{LangDef.ZHHK.getValue(), "交易密碼已被鎖定"}}),
	TRADING_PW_INCORRECT(30042, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading password is incorrect"},
			{LangDef.ZH.getValue(), "交易密码不正确"},
			{LangDef.ZHHK.getValue(), "交易密碼不正確"}}),
	TRADING_SESSION_NOT_VALID(30043, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading session is invalid"},
			{LangDef.ZH.getValue(), "交易时段无效"},
			{LangDef.ZHHK.getValue(), "交易時段無效"}}),
	TRADING_SESSION_EXPIRED(30044, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading session expired"},
			{LangDef.ZH.getValue(), "交易时段过期"},
			{LangDef.ZHHK.getValue(), "交易時段過期"}}),
	TRADING_PW_NOT_VERIFIED(30045, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Trading password is not verified"},
			{LangDef.ZH.getValue(), "交易密码未验证"},
			{LangDef.ZHHK.getValue(), "交易密碼未驗證"}}),
	OTP_EXCEED_DAILY_LIMIT(30046, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Exceed OTP max daily limit"},
			{LangDef.ZH.getValue(), "超过 OTP 最大每日限制"},
			{LangDef.ZHHK.getValue(), "超過 OTP 最大每日限制"}}),
	OTP_FREQUENCY_TOO_HIGH(30047, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Too many OTP requests in the last 30 mins"},
			{LangDef.ZH.getValue(), "过去 30 分钟内 OTP 请求太多"},
			{LangDef.ZHHK.getValue(), "過去 30 分鐘內 OTP 請求過多"}}),
	DEVICE_NOT_AUTH(30048, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The device not authenticated"},
			{LangDef.ZH.getValue(), "設備未通過驗證"},
			{LangDef.ZHHK.getValue(), "設備未通過驗證"}}),
	DEVICE_ALREADY_BOUND(30049, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Device already bound"},
			{LangDef.ZH.getValue(), "设备已绑定"},
			{LangDef.ZHHK.getValue(), "設備已綁定"}}),
	ACCOUNT_REQUIRE_DEVICE_AUTH(30050, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Account requires device authentication"},
			{LangDef.ZH.getValue(), "帐户需要设备验证"},
			{LangDef.ZHHK.getValue(), "帳戶需要設備驗證"}}),
	ACCOUNT_CANNOT_TERMINATE(30051, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Account cannot be terminated"},
			{LangDef.ZH.getValue(), "帐户不可终止"},
			{LangDef.ZHHK.getValue(), "帳戶不可終止"}}),
	PW_SYNC_FAIL(30052, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Failed to sync MMK and trade account passwords, please contact CS"},
			{LangDef.ZH.getValue(), "MMK与交易账户密码同步失败，请联系CS"},
			{LangDef.ZHHK.getValue(), "MMK與交易賬戶密碼同步失敗，請聯繫CS"}}),
	VERIFICATION_CODE_TOO_FREQUENT(30053, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Too frequent to send verification codes. Please try again later."},
			{LangDef.ZH.getValue(), "验证码请求过于频密，请稍后再试"},
			{LangDef.ZHHK.getValue(), "驗證碼請求過於頻密，請稍後再試"}}),
	REQUIRE_SECURITY_QUESTION(30054, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Security question verification is required"},
			{LangDef.ZH.getValue(), "需要验证安全问题"},
			{LangDef.ZHHK.getValue(), "需要驗證安全問題"}}),
	PREVIOUS_VERIFICATION_NOT_COMPLETE(30055, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Previous verification has not been completed"},
			{LangDef.ZH.getValue(), "先前的验证尚未完成"},
			{LangDef.ZHHK.getValue(), "先前的驗證尚未完成"}}),
	INVALID_SECURITY_QUESTION(30056, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The security question verification is incorrect"},
			{LangDef.ZH.getValue(), "安全问题验证不正确"},
			{LangDef.ZHHK.getValue(), "安全問題驗證不正確"}}),
	REQUIRE_BOUND_PHONE_NUMBER(30057, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The account needs to be bound to a mobile phone number"},
			{LangDef.ZH.getValue(), "账号需要绑定手机号码"},
			{LangDef.ZHHK.getValue(), "帳號需要綁定手機號碼"}}),
	REQUIRE_BOUND_EMAIL(30058, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "The account needs to be bound to an email address"},
			{LangDef.ZH.getValue(), "账号需要绑定email"},
			{LangDef.ZHHK.getValue(), "帳號需要綁定email"}}),
	LOGIN_CLIENT_LINKAGE_NOT_FOUND(30059, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Login account to client linkage not found"},
			{LangDef.ZH.getValue(), "登录帐户与客户的连结未找到"},
			{LangDef.ZHHK.getValue(), "登錄帳戶與客戶的連結未找到"}}),
	LOGIN_CLIENT_LINKAGE_STATUS_INVALID(30060, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Login account to client linkage is invalid for operation"},
			{LangDef.ZH.getValue(), "登录帐户与客户的连结状态对操作无效"},
			{LangDef.ZHHK.getValue(), "登錄帳戶與客戶的連結狀態對操作無效"}}),
	INVALID_PHONE_NUMBER(30061, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The phone number is invalid"}, 
			{LangDef.ZH.getValue(), "该电话号码是无效的"},
			{LangDef.ZHHK.getValue(), "該電話號碼是無效的"}}),
	
	
	// 30100 for aos
	AO_GENERAL_ERROR(30100, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "AO General error, Please check beneficial owner of the Account and identity of US person is correct."},
			{LangDef.ZH.getValue(), "AO一般错误，请检查帐户的受益所有人和美国人的身份是否正确"},
			{LangDef.ZHHK.getValue(), "AO一般錯誤，請檢查帳戶的受益所有人和美國人的身份是否正確"}}),
	AGE_ERROR(30101, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Age is less than 18"},
			{LangDef.ZH.getValue(), "年龄小于18岁"},
			{LangDef.ZHHK.getValue(), "年齡小於18歲"}}),
	HK_ID_ERROR(30102, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "HK id is required for HK residence"},
			{LangDef.ZH.getValue(), "在香港居住需要有香港身份证"},
			{LangDef.ZHHK.getValue(), "在香港居住需要有香港身份證"}}),
	CHINESE_ID_ERROR(30103, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Chinese id is required for Chinese residence"},
			{LangDef.ZH.getValue(), "在中国居住需要有中国身份证"},
			{LangDef.ZHHK.getValue(), "在中國居住需要有中國身份證"}}),
	CHINESE_PASSPORT_ERROR(30104, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Passport is required for Chinese residence"},
			{LangDef.ZH.getValue(), "在中国居住需要有护照"},
			{LangDef.ZHHK.getValue(), "在中國居住需要有護照"}}),
	OTHER_PASSPORT_ERROR(30105, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Passport is required for non Chinsese or HK"},
			{LangDef.ZH.getValue(), "非中国人或香港人需要护照。"},
			{LangDef.ZHHK.getValue(), "非中國人或香港人需要護照。"}}),
	MANDATORY_ACCOUNT_TYPE(30106, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Account type is mandatory"},
			{LangDef.ZH.getValue(), "账户类型是强制性的"},
			{LangDef.ZHHK.getValue(), "賬戶類型是強制性的"}}),
	MANDATORY_TITLE(30107, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Title is required"},
			{LangDef.ZH.getValue(), "标题是必需的"},
			{LangDef.ZHHK.getValue(), "標題是必需的"}}),
	MANDATORY_ENGLISH_NAME(30108, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "English name is required"},
			{LangDef.ZH.getValue(), "需要英文名称"},
			{LangDef.ZHHK.getValue(), "需要英文名稱"}}),
	MANDATORY_DOB(30109, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "DOB is required"},
			{LangDef.ZH.getValue(), "需要提供DOB"},
			{LangDef.ZHHK.getValue(), "需要提供DOB"}}),
	MANDATORY_POB(30110, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "POB is required"},
			{LangDef.ZH.getValue(), "需要有POB"},
			{LangDef.ZHHK.getValue(), "需要有POB"}}),
	MANDATORY_NATIONALITY(30111, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Nationality is required"},
			{LangDef.ZH.getValue(), "需要有国籍"},
			{LangDef.ZHHK.getValue(), "需要有國籍"}}),
	MANDATORY_ID(30112, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Id Document and Document number is required"},
			{LangDef.ZH.getValue(), "需要提供身份证件和证件号码"},
			{LangDef.ZHHK.getValue(), "需要提供身份證件和證件號碼"}}),
	MANDATORY_PHONE(30113, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Phone number is required"},
			{LangDef.ZH.getValue(), "需要提供电话号码"},
			{LangDef.ZHHK.getValue(), "需要提供電話號碼"}}),
	MANDATORY_STOCK_MARKET(30114, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Stock market is required and HK stock must be enable"},
			{LangDef.ZH.getValue(), "证券市场是需要的，香港股票必须启用"},
			{LangDef.ZHHK.getValue(), "證券市場是需要的，香港股票必須啟用"}}),
	MANDATORY_SOURCE_OF_WEALTH(30115, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Source of wealth is required"},
			{LangDef.ZH.getValue(), "需要有财富的来源"},
			{LangDef.ZHHK.getValue(), "需要有財富的來源"}}),
	MANDATORY_ANNUAL_INCOME(30116, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Annual income is required"},
			{LangDef.ZH.getValue(), "要求有年收入"},
			{LangDef.ZHHK.getValue(), "要求有年收入"}}),
	MANDATORY_ASSET_TYPE(30117, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Asset type is required"},
			{LangDef.ZH.getValue(), "资产类型是必需的"},
			{LangDef.ZHHK.getValue(), "資產類型是必需的"}}),
	MANDATORY_TOTAL_NET_ASSET_WORTH(30118, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Total net asset worth is required"},
			{LangDef.ZH.getValue(), "必需填写总净资产值"},
			{LangDef.ZHHK.getValue(), "必需填寫總淨資產值"}}),
	MANDATORY_NATURE_OCCUPANCY(30119, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Nature occupancy is required"},
		{LangDef.ZH.getValue(), "必需填写职业"},
		{LangDef.ZHHK.getValue(), "必需填寫職業"}}),
	MANDATORY_INVESTMENT_EXP(30120, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Investment exp is required"},
		{LangDef.ZH.getValue(), "必需填写投资经验"},
		{LangDef.ZHHK.getValue(), "必需填寫是投資經驗"}}),
	MANDATORY_INVESTED_PRODUCTS(30121, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Invested product is required"},
		{LangDef.ZH.getValue(), "必需填写投资的产品"},
		{LangDef.ZHHK.getValue(), "必需填寫投資的產品"}}),
	MANDATORY_AVERAGE_INVESTMENT_AMOUNT(30122, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Investment amount is required"},
		{LangDef.ZH.getValue(), "必需填写年平均投资金额"},
		{LangDef.ZHHK.getValue(), "必需填寫年平均投資金額"}}),
	MANDATORY_INVESTMENT_OPTION(30123, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Investment option is required"},
		{LangDef.ZH.getValue(), "必需填写投资目标"},
		{LangDef.ZHHK.getValue(), "必需填寫投資目標"}}),
	MANDATORY_RISK_TOLERENCE(30124, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Risk Tolerance is null"},
			{LangDef.ZH.getValue(), "风险容忍度为空"},
			{LangDef.ZHHK.getValue(), "風險容忍度為空"}}),
	MANDATORY_EMAIL(30125, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Email is null"},
			{LangDef.ZH.getValue(), "电子邮件为空"},
			{LangDef.ZHHK.getValue(), "電子郵件為空"}}),
	ENGLISH_NAME_INVALID_FORMAT(30126, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "English name is invalid"},
			{LangDef.ZH.getValue(), "英文名称是无效的"},
			{LangDef.ZHHK.getValue(), "英文名稱是無效的"}}),
	ACCOUNTING_OPENING_FORM_REJECT_AMEND(30127, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "The form cannot be amend after confirm to submit"},
			{LangDef.ZH.getValue(), "确认提交后不能再修改表格"},
			{LangDef.ZHHK.getValue(), "確認提交後不能再修改表格"}}),
	MANDATORY_SECOND_DOCUMENT_TYPE(30128, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Second document type can not null when non Hk Permanent Residential"},
			{LangDef.ZH.getValue(), "当非香港永久居民时，第二个文件类型不能为空。"},
			{LangDef.ZHHK.getValue(), "當非香港永久居民時，第二個文件類型不能為空。"}}),
	MANDATORY_TAX_INFO_MISSING(30129, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing tax info"},
			{LangDef.ZH.getValue(), "缺少税务信息"},
			{LangDef.ZHHK.getValue(), "缺少稅務信息"}}),
	MANDATORY_TAX_INFO_EXCESS(30130, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Only 3 tax info per account in maximum"},
			{LangDef.ZH.getValue(), "每个账户最多只能有3个税务信息"},
			{LangDef.ZHHK.getValue(), "每個賬戶最多只能有3個稅務信息"}}),
	MANDATORY_BANK_ACCOUNT_NUMBER(30131, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Bank account number is required"},
			{LangDef.ZH.getValue(), "需要提供银行账户号码"},
			{LangDef.ZHHK.getValue(), "需要提供銀行賬戶號碼"}}),
	MANDATORY_SUPPORTING_DOCUMENT(30132, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Supporting document is required"},
			{LangDef.ZH.getValue(), "需要提供证明文件"},
			{LangDef.ZHHK.getValue(), "需要提供證明文件"}}),
	MANDATORY_HK_PERMANENT_RESIDENTIAL(30133, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "FAILED"},
			{LangDef.ZH.getValue(), "只接受香港永久居民"},
			{LangDef.ZHHK.getValue(), "只接受香港永久居民"}}),
	MANDATORY_SIGNATURE(30134, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "signature is required"},
			{LangDef.ZH.getValue(), "签名是必需的"},
			{LangDef.ZHHK.getValue(), "簽名是必需的"}}),
	MISSING_DOCUMENT_IMAGE(30135, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing document image"},
			{LangDef.ZH.getValue(), "缺少文件图像"},
			{LangDef.ZHHK.getValue(), "缺少文件圖像"}}),
	MISSING_BANK_INFO(30136, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing bank info e.g (Bank Account Holder Name / Bank Account No)"},
			{LangDef.ZH.getValue(), "缺少的银行信息"},
			{LangDef.ZHHK.getValue(), "缺少的銀行信息"}}),
	BANK_INFO_SIZE_OVER(30137, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "only one bank info is allowed"},
			{LangDef.ZH.getValue(), "只允许一个银行信息"},
			{LangDef.ZHHK.getValue(), "只允許一個銀行信息"}}),
	MISSING_ID(30138, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing id or client id"},
			{LangDef.ZH.getValue(), "缺少ID或客户ID"},
			{LangDef.ZHHK.getValue(), "缺少ID或客戶ID"}}),
	MANDATORY_AGREEMENT(30139, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Agreement is null"},
			{LangDef.ZH.getValue(), "协议为空"},
			{LangDef.ZHHK.getValue(), "協議為空"}}),
	MISSING_EMPLOYMENT_INFO(30140, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing employment info"},
			{LangDef.ZH.getValue(), "缺少的就业信息"},
			{LangDef.ZHHK.getValue(), "缺少的就業信息"}}),
	AO_FORM_NOT_FOUND(30141, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "The account opening form cannot be found"},
			{LangDef.ZH.getValue(), "无法找到开户表格"},
			{LangDef.ZHHK.getValue(), "無法找到開戶表格"}}),
	CLIENT_ID_INVALID(30142, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "The client id is invalid"},
			{LangDef.ZH.getValue(), "客户端ID是无效的"},
			{LangDef.ZHHK.getValue(), "客戶端ID是無效的"}}),
	FORM_IS_APPROVING_OR_APPROVE(30143, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Only In progress form can be confirmed"},
			{LangDef.ZH.getValue(), "只有在进行中的表格可以被确认"},
			{LangDef.ZHHK.getValue(), "只有在進行中的表格可以被確認"}}),
	AO_FORM_NOT_ACTIVE(30144, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The account opening form is not active"},
			{LangDef.ZH.getValue(), "开户表格处于未激活状态"},
			{LangDef.ZHHK.getValue(), "開戶表格處於未激活狀態"}}),
	MISSING_DOCUMENT_ID(30145, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "required document id is missing"},
			{LangDef.ZH.getValue(), "缺少所需的文件ID"},
			{LangDef.ZHHK.getValue(), "缺少所需的文件ID"}}),
	MISSING_ID_DOCUMENT_TYPE(30146, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "required id document type is missing"},
			{LangDef.ZH.getValue(), "缺少所需的ID文件类型"},
			{LangDef.ZHHK.getValue(), "缺少所需的ID文件類型"}}),
	APPOINTMENT_RECORD_IS_NOT_FOUND(30147, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "account opening appointment record is empty"},
			{LangDef.ZH.getValue(), "开户预约记录为空"},
			{LangDef.ZHHK.getValue(), "開戶預約記錄為空"}}),
	ACCOUNT_ALREADY_OPENED(30148, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "account already opened"},
			{LangDef.ZH.getValue(), "账户已经开通"},
			{LangDef.ZHHK.getValue(), "賬戶已經開通"}}),
	AO_EMAIL_NOT_MATCH_ACCOUNT(30149, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Ao form email does not match account"},
			{LangDef.ZH.getValue(), "开户表格email与账户不符"},
			{LangDef.ZHHK.getValue(), "開戶表格email與帳戶不符"}}),
	
	INVALID_CASH_DEPOSIT(30151, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Cash Deposit for AO is only valid for submitted AO form"},
			{LangDef.ZH.getValue(), "AO的现金存款只对已提交的AO表格有效。"},
			{LangDef.ZHHK.getValue(), "AO的現金存款只對已提交的AO表格有效。"}}),
	REQUIRED_FIELDS_ARE_NULL(30152, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Required fields cannot be null!"},
			{LangDef.ZH.getValue(), "必填字段不能为空!"},
			{LangDef.ZHHK.getValue(), "必填字段不能為空!"}}),
	DUPLICATED_AO_FORM_SUBMISSION(30153, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "AO form had been submitted before"},
			{LangDef.ZH.getValue(), "之前已经提交了AO表格"},
			{LangDef.ZHHK.getValue(), "之前已經提交了AO表格"}}),
	AO_CASH_DEPOSIT_APPROVAL(30154, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "AO Cash deposit form had been approved before"},
			{LangDef.ZH.getValue(), "AO现金存款表之前已经被批准"},
			{LangDef.ZHHK.getValue(), "AO現金存款表之前已經被批准"}}),
	AO_CASH_DEPOSIT_DUPLICATED_SUBMISSION(30155, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "AO Cash deposit form had been submitted before."},
			{LangDef.ZH.getValue(), "之前已经提交了AO现金存款表"},
			{LangDef.ZHHK.getValue(), "之前已經提交了AO現金存款表。"}}),
	AO_CASH_DEPOSIT_UNSUPPORTED_PAYMENT_METHOD(30156, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Unsupported Payment Method"},
			{LangDef.ZH.getValue(), "不支持的支付方式"},
			{LangDef.ZHHK.getValue(), "不支持的支付方式"}}),
	AO_CASH_DEPOSIT_FORM_NOT_FOUND(30157, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "The cash deposit form cannot be found"},
			{LangDef.ZH.getValue(), "无法找到现金存款表"},
			{LangDef.ZHHK.getValue(), "無法找到現金存款表"}}),
	AO_FORM_INVALID_TIME(30158, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing employment info"},
			{LangDef.ZH.getValue(), "你只能在3个月后重新创建新的表格"},
			{LangDef.ZHHK.getValue(), "你只能在3個月後重新創建新的表格"}}),
	
	AO_PHONE_NOT_MATCH_ACCOUNT(30159, MessageType.ERROR, 
			new String[][]{ {LangDef.EN.getValue(), "Ao form phone number does not match account"},
			{LangDef.ZH.getValue(), "开户表格电话号码与帐号不符"},
			{LangDef.ZHHK.getValue(), "開戶表格電話號碼與帳號不符"}}),
	INVALID_MONTHS_EMPLOYED(30160, MessageType.ERROR, 
			new String[][]{ {LangDef.EN.getValue(), "Invalid employed months, should be 0 to 11"},
			{LangDef.ZH.getValue(), "工作月份无效，应为0到11"},
			{LangDef.ZHHK.getValue(), "工作月份無效，應為0到11"}}),
	INVALID_YEARS_EMPLOYED(30161, MessageType.ERROR, 
			new String[][]{ {LangDef.EN.getValue(), "Invalid employed years, should be greater than 0"},
			{LangDef.ZH.getValue(), "工作年份无效，应大于0"},
			{LangDef.ZHHK.getValue(), "工作年份無效，應大於0"}}),
	MISSING_EMPLOYMENT_INFO_OTHERS(30162, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing employment info(Other)"},
			{LangDef.ZH.getValue(), "缺少就业信息(其他)"},
			{LangDef.ZHHK.getValue(), "缺少就業信息(其他)"}}),
	MISSING_EMPLOYMENT_EMPLOYER_NAME(30163, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing employer name"},
			{LangDef.ZH.getValue(), "缺少雇主名称"},
			{LangDef.ZHHK.getValue(), "缺少雇主名稱"}}),
	MISSING_EMPLOYMENT_BUSINESS_NATURE(30164, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing business nature"},
			{LangDef.ZH.getValue(), "缺少业务性质"},
			{LangDef.ZHHK.getValue(), "缺少業務性質"}}),
	MISSING_EMPLOYMENT_BUSINESS_NATURE_OTHER(30165, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing business nature(Other)"},
			{LangDef.ZH.getValue(), "缺少业务性质(其他)"},
			{LangDef.ZHHK.getValue(), "缺少業務性質(其他)"}}),
	MISSING_EMPLOYMENT_POSITION(30166, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing position info"},
			{LangDef.ZH.getValue(), "缺少职位信息"},
			{LangDef.ZHHK.getValue(), "缺少職位信息"}}),
	AO_FORM_CLIENT_NOT_AGED_18_YEARS(30167, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Client not a aged 18 years."},
			{LangDef.ZH.getValue(), "客户未满 18 岁"},
			{LangDef.ZHHK.getValue(), "客戶未滿 18 歲"}}),
	MANDATORY_DISCLOSURE(30168, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Disclosure is null"},
			{LangDef.ZH.getValue(), "披露为空"},
			{LangDef.ZHHK.getValue(), "披露為空"}}),
	INCORRECT_DISCLOSURE_RELATED_ACCOUNT(30169, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: related account"},
			{LangDef.ZH.getValue(), "披露:相关账户信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:相關賬戶信息 不正確"}}),
	INCORRECT_DISCLOSURE_MARGIN_ACCOUNT(30170, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: financing margin account"},
			{LangDef.ZH.getValue(), "披露:融资保证金账户信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:融資保證金賬戶信息 不正確"}}),
	INCORRECT_DISCLOSURE_SFC_IDENTITY(30171, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: SFC identity"},
			{LangDef.ZH.getValue(), "披露:香港证监会身份信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:香港證監會身份信息 不正確"}}),
	INCORRECT_DISCLOSURE_COMPANY_CONTROL(30172, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: company control"},
			{LangDef.ZH.getValue(), "披露:公司控制信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:公司控制信息 不正確"}}),
	INCORRECT_DISCLOSURE_MGSL_RELATIVE(30173, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: relative of MGSL"},
			{LangDef.ZH.getValue(), "披露:MGSL关系信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:MGSL關係信息 不正確"}}),
	INCORRECT_DISCLOSURE_PUBLIC_POSITION_IDENTITY(30174, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect disclosure: public position identity"},
			{LangDef.ZH.getValue(), "披露:公职身份信息 不正确"},
			{LangDef.ZHHK.getValue(), "披露:公職身份信息 不正確"}}),
	MISSING_DERIVATIVE_KNOWLEDGE(30175, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing Knowledge of Derivatives"},
			{LangDef.ZH.getValue(), "缺少衍生品知识信息"},
			{LangDef.ZHHK.getValue(), "缺少衍生品知識信息"}}),
	MISSING_DERIVATIVE_TRAINING(30176, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing training info of Derivative"},
			{LangDef.ZH.getValue(), "缺少衍生品培训信息"},
			{LangDef.ZHHK.getValue(), "缺少衍生品培訓信息"}}),
	MISSING_DERIVATIVE_WORK_EXPERIENCE(30177, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing work experience of Derivative"},
			{LangDef.ZH.getValue(), "缺少衍生品工作经验信息"},
			{LangDef.ZHHK.getValue(), "缺少衍生品工作經驗信息"}}),
	MISSING_DERIVATIVE_TRANSACTION_EXPERIENCE(30178, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing transaction experience of Derivative"},
			{LangDef.ZH.getValue(), "缺少衍生品交易经验信息"},
			{LangDef.ZHHK.getValue(), "缺少衍生品交易經驗信息"}}),
	MISSING_DERIVATIVE_TRADED_PRODUCT(30179, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing traded derivative products"},
			{LangDef.ZH.getValue(), "缺少交易过的衍生产品信息"},
			{LangDef.ZHHK.getValue(), "缺少交易過的衍生產品信息"}}),
	MISSING_DERIVATIVE_TRADED_PRODUCT_OTHER(30180, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing derivative products: other"},
			{LangDef.ZH.getValue(), "缺少信息衍生产品：其他"},
			{LangDef.ZHHK.getValue(), "缺少信息衍生產品：其他"}}),
	INCORRECT_DERIVATIVE_KNOWLEDGE_OF_DERIVATIVE(30181, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect derivative: Knowledge of Derivatives"},
			{LangDef.ZH.getValue(), "衍生品:衍生品知识信息 不正确"},
			{LangDef.ZHHK.getValue(), "衍生品:衍生品知識信息 不正確"}}),
	INCORRECT_DERIVATIVE_TRANSACTION_EXPERIENCE(30182, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect derivative: transaction experience of Derivative"},
			{LangDef.ZH.getValue(), "衍生品:衍生品交易经验信息 不正确"},
			{LangDef.ZHHK.getValue(), "衍生品:衍生品交易經驗信息 不正確"}}),
	AO_TYPED_SIGNATURE_ERROR(30183, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(),
					"Ao Form typed signature and User name not identical.The sequence of the english name (Last Name + First Name) E.G : Chan Tai Man "},
			{LangDef.ZH.getValue(), "输入的正式名称跟姓名不符 姓氏与名字之间需隔空 例: Chan Tai Man "},
			{LangDef.ZHHK.getValue(), "輸入的正式名稱跟姓名不符 姓氏與名字之間需隔空 例: Chan Tai Man "}}),
	INCORRECT_AML_POLITICIAN_LINKAGE(30184, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: link with politicians"},
			{LangDef.ZH.getValue(), "AML：与政客的关系 不正确"},
			{LangDef.ZHHK.getValue(), "AML：與政客的關係 不正確"}}),
	AO_FORM_IS_REJECT(30185, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "ao form is reject"},
			{LangDef.ZH.getValue(), "开户表格被拒绝"},
			{LangDef.ZHHK.getValue(), "開戶表格被拒絕"}}),
	MANDATORY_EDUCATION_LEVEL(30186, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Education level is mandatory"},
			{LangDef.ZH.getValue(), "缺少教育水平"},
			{LangDef.ZHHK.getValue(), "缺少教育水平"}}),
	MANDATORY_AML(30187, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "AML is null"},
			{LangDef.ZH.getValue(), "AML为空"},
			{LangDef.ZHHK.getValue(), "AML為空"}}),
	INCORRECT_AML_CONVICTION_RECORD(30188, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Conviction Record"},
			{LangDef.ZH.getValue(), "AML：定罪记录 不正確"},
			{LangDef.ZHHK.getValue(), "AML：定罪記錄 不正確"}}),
	INCORRECT_AML_JOB_HANDLE_THIRD_PARTY_ASSESTS(30189, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Nature of work involving third-party assets"},
			{LangDef.ZH.getValue(), "AML：涉及第三方资产的工作性质 不正確"},
			{LangDef.ZHHK.getValue(), "AML：涉及第三方資產的工作性質 不正確"}}),
	INCORRECT_AML_IMPLEMENTED_AML_PROCEDURES(30190, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Implemented AML Procedures"},
			{LangDef.ZH.getValue(), "AML：已实施的反洗钱程序 不正確"},
			{LangDef.ZHHK.getValue(), "AML：已實施的反洗錢程序 不正確"}}),
	INCORRECT_AML_SUSPICIOUS_ACTIVITY_PROCEDURES(30191, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Documented Suspicious Activity Procedures"},
			{LangDef.ZH.getValue(), "AML：可疑活动程序记录 不正確"},
			{LangDef.ZHHK.getValue(), "AML：可疑活動程序記錄 不正確"}}),
	INCORRECT_AML_IDENTITY_VERIFICATION_POLICIES(30192, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Customer Identity Verification Policies"},
			{LangDef.ZH.getValue(), "AML：客户身份验证政策 不正確"},
			{LangDef.ZHHK.getValue(), "AML：客戶身份驗證政策 不正確"}}),
	INCORRECT_AML_CITIZEN_OF_FATF(30193, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Citizen Of FATF"},
			{LangDef.ZH.getValue(), "AML：FATF 公民 不正確"},
			{LangDef.ZHHK.getValue(), "AML：FATF 公民 不正確"}}),
	INCORRECT_AML_LIVE_IN_PREVENT_MONEY_LAUNDERING_PLACE(30194, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Live In Prevent Money Laundering Place"},
			{LangDef.ZH.getValue(), "AML：居住在防止洗钱的地方 不正確"},
			{LangDef.ZHHK.getValue(), "AML：居住在防止洗錢的地方 不正確"}}),
	INCORRECT_AML_JOB_SUSCEPTIBLE_MONEY_LAUNDERING_RISK(30195, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Incorrect AML: Job Susceptible To Money Laundering Risk Need Elaborate Below"},
			{LangDef.ZH.getValue(), "AML：工作易受洗钱风险 不正確 请于详述相关理由"},
			{LangDef.ZHHK.getValue(), "AML：工作易受洗錢風險 不正確 請於詳述相關理由"}}),
	MISSING_RESIDENTIAL_CORRESPONDENCE_COUNTRY(30196, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing Residential Correspondence Country."},
			{LangDef.ZH.getValue(), "缺少居住/通信国家/地区"},
			{LangDef.ZHHK.getValue(), "缺少居住/通信國家/地區"}}),
	MISSING_HK_RESIDENTIAL_DISTRICT(30197, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing Districts Code Of Hong Kong."},
			{LangDef.ZH.getValue(), "缺失香港地区"},
			{LangDef.ZHHK.getValue(), "缺失香港地區"}}),
	MISSING_CHINA_PROVINCE(30198, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing Province of China."},
			{LangDef.ZH.getValue(), "缺失中国省份"},
			{LangDef.ZHHK.getValue(), "缺失中國省份"}}),
	MISSING_RESIDENTIAL_CORRESPONDENCE_CITY(30199, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing Residential Correspondence City."},
			{LangDef.ZH.getValue(), "缺失通信国家城市"},
			{LangDef.ZHHK.getValue(), "缺失通信國家城市"}}),
	MISSING_RESIDENTIAL_CORRESPONDENCE_STATES(30200, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing Residential Correspondence States."},
			{LangDef.ZH.getValue(), "缺失通信州份/省份/郡"},
			{LangDef.ZHHK.getValue(), "缺失通信州份/省份/郡"}}),
	NOT_A_CHINA_OR_HK_ADDRESS(30201, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "You don't need input Districts Code Of Hong Kong and Province of China."},
			{LangDef.ZH.getValue(), "您无需输入香港地区及中国省区号"},
			{LangDef.ZHHK.getValue(), "您無需輸入香港地區及中國省區號"}}),
	NOT_A_CHINA_ADDRESS(30202, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "You don't need input Districts Code Of Hong Kong."},
			{LangDef.ZH.getValue(), "您无需输入香港地区"},
			{LangDef.ZHHK.getValue(), "您無需輸入香港地區"}}),
	NOT_A_HK_ADDRESS(30203, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "You don't need input Province of China."},
			{LangDef.ZH.getValue(), "您无需输入中国省区号"},
			{LangDef.ZHHK.getValue(), "您無需輸入中國省區號"}}),
	NOT_A_HK_OR_CHINA_ADDRESS(30204, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "You don't need input Residential Correspondence States and City."},
			{LangDef.ZH.getValue(), "您无需输入通信州份/省份/郡/国家城市"},
			{LangDef.ZHHK.getValue(), "您無需輸入通信州份/省份/郡/國家城市"}}),
	MARGIN_ACCOUNT_INCORRECT_RISK_TOLERANCE(30205, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Securities Margin Account belongs to Medium And or High risk categories"},
			{LangDef.ZH.getValue(), "证券保证金账户属于“中等风险”或“高风险”类别"},
			{LangDef.ZHHK.getValue(), "證券保證金賬戶屬於“中等風險”或“高風險”類別"}}),
	CURRENCY_UNSUPPORTED_PAYMENT_METHOD(30206, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Bank card account type not supporting this currency payment"},
			{LangDef.ZH.getValue(), "银行卡账户类型不支援该币种支付"},
			{LangDef.ZHHK.getValue(), "銀行卡賬戶類型不支援該幣種支付"}}),
	INVALID_YEARS_EMPLOYED_IS_ZERO(30207, MessageType.ERROR, new String[][]{ {LangDef.EN.getValue(), "Invalid employed months or years , should be greater than 0"},
			{LangDef.ZH.getValue(), "工作月份/年份无效，应大于0"},
			{LangDef.ZHHK.getValue(), "工作月份年份無效，應大於0"}}),
	EMPTY_ADDRESS(30208, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Empty address fields"},
			{LangDef.ZH.getValue(), "缺少地址栏位"},
			{LangDef.ZHHK.getValue(), "缺少地址欄位"}}),
	TAX_INFO_EMPTY(30209, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Tax Country or Tax No fields is empty"},
			{LangDef.ZH.getValue(), "纳税国家或税号字段不可为空"},
			{LangDef.ZHHK.getValue(), "納稅國家或稅號字段不可為空"}}),
	ONLY_HIGH_RISK_TOLERANCE_INVESTMENT_TYPE(30210, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Northbound China Connect Orders and U.S. Stocks can only be chosen when the risk tolerance is high"},
			{LangDef.ZH.getValue(), "只有承受风险为高时才可选择中华北向通和美股"},
			{LangDef.ZHHK.getValue(), "只有承受風險為高時才可選擇中華北向通和美股"}}),
	MISSING_CLIENT_INVESTMENT_INTERESTS(30211, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing client investment interests"},
			{LangDef.ZH.getValue(), "缺失客户投资意向"},
			{LangDef.ZHHK.getValue(), "缺失客戶投資意向"}}),
	REQUIRE_DISCLOSURE_SFC_IDENTITY(30212, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Employment: business nature involves money laundering threats, and identity declaration details are required"},
			{LangDef.ZH.getValue(), "就业：业务性质 涉及洗钱威胁，需身份申报详细信息"},
			{LangDef.ZHHK.getValue(), "就業：業務性質 涉及洗錢威脅，需身份申報詳細信息"}}),
	NASDAQ_QUESTIONNAIRE_NOT_FOUND(30213, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Nasdaq questionnaire not found"},
			{LangDef.ZH.getValue(), "无法找到纳斯达克问卷"},
			{LangDef.ZHHK.getValue(), "無法找到納斯達克問卷"}}),
	INVALID_NASDAQ_QUESTIONNAIRE_STATUS(30214, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Invalid nasdaq questionnaire status"},
			{LangDef.ZH.getValue(), "纳斯达克问卷状态无效"},
			{LangDef.ZHHK.getValue(), "納斯達克問卷狀態無效"}}),
	INVALID_ID_DOCUMENT_NUMBER_HKID(30215, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Invalid HKID"},
			{LangDef.ZH.getValue(), "香港身份证号码无效"},
			{LangDef.ZHHK.getValue(), "香港身分證號碼無效"}}),
	MUST_ACCEPT_ALL_NASDAQ_AGREEMENT(30216, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client must accept all nasdaq agreement"},
			{LangDef.ZH.getValue(), "必须接受全部纳斯达克协议"},
			{LangDef.ZHHK.getValue(), "必須接受全部納斯達克協議"}}),
	OFFLINE_DEPOSIT_FORM_NOT_REQUIRED(30217, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Deposit form is not required for offline account opening flow"},
			{LangDef.ZH.getValue(), "线下开户流程无需填写存款表格"},
			{LangDef.ZHHK.getValue(), "線下開戶流程無須填寫存款表格"}}),
	MISSING_AML_IMPLEMENTED_AML_PROCEDURES(30218, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing AML: Implemented AML Procedures"},
			{LangDef.ZH.getValue(), "缺失AML：已实施的反洗钱程序"},
			{LangDef.ZHHK.getValue(), "缺少AML：已實施的反洗錢程序"}}),
	MISSING_AML_SUSPICIOUS_ACTIVITY_PROCEDURES(30219, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing AML: Documented Suspicious Activity Procedures"},
			{LangDef.ZH.getValue(), "缺失AML：可疑活动程序记录"},
			{LangDef.ZHHK.getValue(), "缺少AML：可疑活動程序記錄"}}),
	MISSING_AML_IDENTITY_VERIFICATION_POLICIES(30220, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing AML: Customer Identity Verification Policies"},
			{LangDef.ZH.getValue(), "缺失AML：客户身份验证政策"},
			{LangDef.ZHHK.getValue(), "缺少AML：客戶身份驗證政策"}}),
	UNNECESSARY_EMPLOYMENT_INFO(30221, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Unnecessary employment info"},
			{LangDef.ZH.getValue(), "不必要的就业信息"},
			{LangDef.ZHHK.getValue(), "不必要的就業信息"}}),
	NASDAQ_QUESTIONNAIRE_DUPLICATE_SUBMITTED(30222, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Nasdaq questionnaire duplicate submitted"},
			{LangDef.ZH.getValue(), "重複递交纳斯达克问卷"},
			{LangDef.ZHHK.getValue(), "重复遞交納斯達克問卷"}}),
	MANDATORY_SOURCE_OF_WEALTH_OTHER(30223, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Source of wealth(Other) is required"},
		{LangDef.ZH.getValue(), "财富的来源(其他)是必需的"},
		{LangDef.ZHHK.getValue(), "財富的來源(其他)是必需的"}}),
	MANDATORY_ASSET_TYPE_OTHER(30224, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Asset type(Other) is required"},
		{LangDef.ZH.getValue(), "资产类型(其他)是必需的"},
		{LangDef.ZHHK.getValue(), "資產類型(其他)是必需的"}}),
	MANDATORY_INVESTED_PRODUCTS_OTHER(30225, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Invested product(Other) is required"},
		{LangDef.ZH.getValue(), "必需填写投资的产品(其他)"},
		{LangDef.ZHHK.getValue(), "必需填寫投資的產品(其他)"}}),
	MANDATORY_INVESTMENT_OPTION_OTHER(30226, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Investment option(Other) is required"},
		{LangDef.ZH.getValue(), "必需填写投资目标(其他)"},
		{LangDef.ZHHK.getValue(), "必需填寫投資目標(其他)"}}),
	MISSING_AGREEMENT_CONFIRMATION(30227, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing agreement confirmation"},
		{LangDef.ZH.getValue(), "缺失协议确认"},
		{LangDef.ZHHK.getValue(), "缺失協議確認"}}),
	MISSING_RISK_DISCLOSURE(30228, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Missing risk disclosure"},
		{LangDef.ZH.getValue(), "缺失协议确认"},
		{LangDef.ZHHK.getValue(), "缺失風險披露"}}),

	// 31000 - 31499 for cash in out
	CASH_IN_NOT_FOUND(31000, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Cash In not found"},
			{LangDef.ZH.getValue(), "Cash In not found"},
			{LangDef.ZHHK.getValue(), "未找到入金"}}),
	CASH_OUT_NOT_FOUND(31001, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Cash Out not found"},
			{LangDef.ZH.getValue(), "Cash Out not found"},
			{LangDef.ZHHK.getValue(), "未找到出金"}}),
	CASH_IN_TX_NOT_ACTIVE(31002, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Cash In Tx is not active"},
			{LangDef.ZH.getValue(), "Cash In Tx is not active"},
			{LangDef.ZHHK.getValue(), "入金未激活"}}),
	CASH_OUT_TX_NOT_ACTIVE(31003, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash Out Tx is not active"},
			{LangDef.ZH.getValue(), "Cash Out Tx is not active"},
			{LangDef.ZHHK.getValue(), "出金未激活"}}),
	CASH_TX_AMOUNT_ZERO(31004, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash Tx amount must be greater than 0"},
			{LangDef.ZH.getValue(), "现金交易金额必须大于 0"},
			{LangDef.ZHHK.getValue(), "現金交易金額必須大於 0"}}),
	CASH_IN_CHATS_MISSING(31005, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in chats need a single document (i.e. receipt) to upload."},
			{LangDef.ZH.getValue(), "入金需要上传单个文件（即收据）"},
			{LangDef.ZHHK.getValue(), "入金需要上傳單個文件（即收據）"}}),
	CASH_IN_BANK_ACCOUNT_NOT_FOUND(31006, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in/out bank account not found"},
			{LangDef.ZH.getValue(), "出入金银行卡未找到"},
			{LangDef.ZHHK.getValue(), "出入金銀行卡未找到"}}),
	CASH_IN_EBANKING_MISSING(31007, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in e-banking need to upload at least 1 document (i.e. receipt)."},
			{LangDef.ZH.getValue(), "电子银行入金需要上传最少一项文件（即收据）"},
			{LangDef.ZHHK.getValue(), "電子銀行入金需要上傳最少一項文件（即收據）"}}),
	CASH_IN_FPS_MISSING(31008, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in FPS need to upload at least 1 document (i.e. receipt)."},
			{LangDef.ZH.getValue(), "FPS入金需要上传最少一项文件（即收据）"},
			{LangDef.ZHHK.getValue(), "FPS入金需要上傳最少一項文件（即收據）"}}),
	CASH_IN_ATM_AMOUNT_MORE_THAN(31009, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cannot deposit more than HKD $ 20000"},
			{LangDef.ZH.getValue(), "存款金额不得超过 HKD $20000"},
			{LangDef.ZHHK.getValue(), "存款金額不得超過 HKD $20000"}}),
	CASH_IN_ATM_MISSING(31010, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in ATM need to upload multiple documents (i.e.  receipt & Bank Card )"},
			{LangDef.ZH.getValue(), "ATM入金需要上传多份文件（收据和银行卡）"},
			{LangDef.ZHHK.getValue(), "ATM入金需要上傳多份文件（收據和銀行卡）"}}),
	CASH_IN_BANK_ACCOUNT_NOT_SUPPORT_EDDA(31011, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash in/out bank account not Support eDDA"},
			{LangDef.ZH.getValue(), "Cash in/out bank account not Support eDDA"},
			{LangDef.ZHHK.getValue(), "入金/出金賬戶不支持 eDDA"}}),
	CASH_OUT_MAX_WITHDRAW_AMOUNT(31012, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Withdrawal amount is larger than the max withdrawal amount of $ 4,000 HKD"},
			{LangDef.ZH.getValue(), "Withdrawal amount is larger than the max withdrawal amount of $ 4,000 HKD"},
			{LangDef.ZHHK.getValue(), "提款金額大於最高提款金額$4,000 HKD"}}),
	CASH_OUT_INSUFFICIENT_FUNDS(31013, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Insufficient withdrawal amount"},
			{LangDef.ZH.getValue(), "提取金额不足"},
			{LangDef.ZHHK.getValue(), "提取金額不足"}}),
	CASH_IN_NEW_BANK_ACC_INVALID_TYPE(31014, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "New bank account cash in only supports e-banking"},
			{LangDef.ZH.getValue(), "新银行帐户提汇款支援电子银行"},
			{LangDef.ZHHK.getValue(), "新銀行帳戶匯款僅支援電子銀行"}}),
	CASH_IN_NEW_BANK_ACC_INSUFFICIENT_AMT(31015, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "New bank account deposits must be higher than HKD 10,000 or USD 1,500 or RMB 10,000"},
			{LangDef.ZH.getValue(), "新银行账户存款须高于港币10,000元或美元1,500或人民币10,000元"},
			{LangDef.ZHHK.getValue(), "新銀行賬戶存款須高於港幣10,000元或美元1,500或人民幣10,000元"}}),
	CASH_IN_TX_NOT_OUTSTANDING(31016, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Cash In Tx is not outstanding state"},
			{LangDef.ZH.getValue(), "入金未激活"},
			{LangDef.ZHHK.getValue(), "入金未激活"}}),
	CASH_OUT_TX_NOT_OUTSTANDING(31017, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Cash Out Tx is not outstanding state"},
			{LangDef.ZH.getValue(), "出金未激活"},
			{LangDef.ZHHK.getValue(), "出金未激活"}}),

	// 31500 - 32999 for Client
	CLIENT_NOT_EXIST(31500, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client does not exist"},
					{LangDef.ZH.getValue(), "客户不存在"},
					{LangDef.ZHHK.getValue(), "客戶不存在"}}),
	CLIENT_INFO_NOT_MATCH_CLIENT(31501, MessageType.ERROR,
			new String[][]{ {LangDef.EN.getValue(), "Client Info phone number does not match account"},
					{LangDef.ZH.getValue(), "客户电话号码与帐号不符"},
					{LangDef.ZHHK.getValue(), "客戶電話號碼與帳號不符"}}),
	INVALID_HK_BANK_CODE(31502, MessageType.ERROR,
			new String[][]{ {LangDef.EN.getValue(), "Invalid Hong Kong Bank Code"},
					{LangDef.ZH.getValue(), "香港银行代码无效"},
					{LangDef.ZHHK.getValue(), "香港銀行代碼無效"}}),
	INCORRECT_BANK_ACCOUNT_NUMBER_FORMAT(31503, MessageType.ERROR,
			new String[][]{ {LangDef.EN.getValue(), "Please check whether the entered bank account number is composed of digits/the length is correct. Length of Account Number from different bank can be different. E.g. Bank of China (Hong Kong) account number usually consists of 11 digits. Example:12345678901 "},
					{LangDef.ZH.getValue(), "请检查输入的银行帐号是否由数字组成/长度是否正确，不同银行的账户号码长度不一，例如中国银行（香港）账户号码通常由11位数字组成。例子:12345678901"},
					{LangDef.ZHHK.getValue(), "請檢查輸入的銀行帳號是否由數字組成/長度是否正確，不同銀行的賬戶號碼長度不一，例如中國銀行（香港）賬戶號碼通常由11位數字組成。例子:12345678901"}}),
	CASH_IN_OUT_AMOUNT_DECIMAL(31504, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Amounts with more than 2 decimal places are not accepted"},
					{LangDef.ZH.getValue(), "不接受多于2个位小数位的金额"},
					{LangDef.ZHHK.getValue(), "不接受多於2個位小數位的金額"}}),
	NEW_BANK_ACCOUNT_REQUEST_NOT_EXIST(31505, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Create bank account request not exist"},
					{LangDef.ZH.getValue(), "添加銀行卡請求不存在"},
					{LangDef.ZHHK.getValue(), "添加银行卡请求不存在"}}),
//	CLIENT_CASH_IN_REQUEST_NOT_APPROVED(31506, MessageType.ERROR,
//			new String[][]{{LangDef.EN.getValue(), "Client cash in request not approved"},
//					{LangDef.ZH.getValue(), "客戶的入金請求尚未審批"},
//					{LangDef.ZHHK.getValue(), "客户的入金请求尚未审批"}}),
	CLIENT_IS_NOT_LEGACY_OR_OFFLINE_USER(31507, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client is not a legacy or offline user"},
					{LangDef.ZH.getValue(), "客户端不是旧用户或线下开户"},
					{LangDef.ZHHK.getValue(), "客戶端不是舊用戶或線下開戶"}}),
	LEGACY_CLIENT_ALREADY_EXIST(31508, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Legacy client already exist"},
					{LangDef.ZH.getValue(), "旧用户已存在"},
					{LangDef.ZHHK.getValue(), "舊用戶已存在"}}),
	INVALID_USER_CATEGORY(31509, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "User category is invalid for the operation"},
					{LangDef.ZH.getValue(), "用户类别对该操作无效"},
					{LangDef.ZHHK.getValue(), "用戶類別對該操作無效"}}),
	CLIENT_IS_UNAVAILABLE(31510, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client is unavailable"},
					{LangDef.ZH.getValue(), "客户用户无法使用"},
					{LangDef.ZHHK.getValue(), "客戶用戶無法使用"}}),
	DUPLICATE_CLIENT_ID_DOCUMENT(31511, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Client's ID document duplicated"},
					{LangDef.ZH.getValue(), "客户身份证件重复"},
					{LangDef.ZHHK.getValue(), "客戶身份證件重複"}}),
	
	// 33000 - 33500 for Ayers Module
	AYERS_CLIENT_NOT_FOUND_IN_DATABASE(33000, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Client account not found in database" },
					{ LangDef.ZH.getValue(), "在数据库中找不到客户帐户" },
					{ LangDef.ZHHK.getValue(), "在數據庫中找不到客戶帳戶" } }),
	AYERS_CLIENT_FAILED_TO_LOGIN(33001, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system client failed to login" },
					{ LangDef.ZH.getValue(), "交易系统客户端登录失败" },
					{ LangDef.ZHHK.getValue(), "交易系統客戶端登錄失敗" } }),
	AYERS_FAILED_TO_PLACE_ORDER(33002, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system failed to place order" },
					{ LangDef.ZH.getValue(), "交易系统下单失败" },
					{ LangDef.ZHHK.getValue(), "交易系統下單失敗" } }),
	AYERS_ORDER_ALREADY_PLACED(33003, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system order already placed" },
					{ LangDef.ZH.getValue(), "交易系统已下订单" },
					{ LangDef.ZHHK.getValue(), "交易系統已下訂單" } }),
	AYERS_BROKER_NOT_YET_LOGIN(33004, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system broker not yet login" },
					{ LangDef.ZH.getValue(), "交易系统尚未登录" },
					{ LangDef.ZHHK.getValue(), "交易系統尚未登錄" } }),
	AYERS_MESSAGE_DESERIALIZE_ERROR(33005, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system message desrialize error" },
					{ LangDef.ZH.getValue(), "交易系统消息反序列化错误" },
					{ LangDef.ZHHK.getValue(), "交易系統消息反序列化錯誤" } }),
	AYERS_ORDER_NOT_FOUND(33006, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system order not found" },
					{ LangDef.ZH.getValue(), "交易系统没找到订单" },
					{ LangDef.ZHHK.getValue(), "交易系統沒找到訂單" } }),
	AYERS_ORDER_NOT_MATCH_WITH_CLIENT(33007, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system order not match with client" },
					{ LangDef.ZH.getValue(), "交易系统订单与客户不符" },
					{ LangDef.ZHHK.getValue(), "交易系統訂單與客戶不符" } }),
	AYERS_ERROR_UNKNOWN(33008, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system unknown error. Please contact us for more information" },
					{ LangDef.ZH.getValue(), "交易系统未知错误。请与我们联系以获取更多信息" },
					{ LangDef.ZHHK.getValue(), "交易系統未知錯誤。請與我們聯繫以獲取更多信息" } }),
	AYERS_INVALID_USER_OR_PWD(33009, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system invalid account or password" },
					{ LangDef.ZH.getValue(), "交易系统帐户或密码不正确" },
					{ LangDef.ZHHK.getValue(), "交易系統帳戶或密碼不正確" } }),
	AYERS_CLIENT_NOT_YET_AUTH(33010, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system client not yet authenticated" },
					{ LangDef.ZH.getValue(), "交易系统客户端未认证" },
					{ LangDef.ZHHK.getValue(), "交易系統客戶端未認證" } }),
	AYERS_RESPONSE_TYPE_UNMATCH(33011, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system response type unmatch" },
					{ LangDef.ZH.getValue(), "交易系统回应类型不匹配" },
					{ LangDef.ZHHK.getValue(), "交易系統回應類型不匹配" } }),
	AYERS_ORDER_UNCOMFIRMED(33012, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system order pending to confirm" },
					{ LangDef.ZH.getValue(), "交易系统订单等待确认中" },
					{ LangDef.ZHHK.getValue(), "交易系統訂單等待確認中" } }),
	AYERS_INVALID_LOGIN_OR_EMAIL(33013, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system invalid login id or email" },
					{ LangDef.ZH.getValue(), "交易系统登录ID或电子邮件错误" },
					{ LangDef.ZHHK.getValue(), "交易系統登錄ID或電子郵件錯誤" } }),
	AYERS_NO_RESPONSE(33014, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system no response for this request" },
					{ LangDef.ZH.getValue(), "交易系统未回应请求" },
					{ LangDef.ZHHK.getValue(), "交易系統未回應請求" } }),
	AYERS_INVALID_LOT_SIZE_QTY(33015, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Invalid lot size quantity" },
					{ LangDef.ZH.getValue(), "无效订单数量" },
					{ LangDef.ZHHK.getValue(), "無效訂單數量" } }),
	AYERS_INVALID_PRICE(33016, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Invalid order price" },
					{ LangDef.ZH.getValue(), "无效订单价格" },
					{ LangDef.ZHHK.getValue(), "無效訂單價格" } }),
	AYERS_QTY_TOO_LARGE(33017, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Order quantity too large" },
					{ LangDef.ZH.getValue(), "订单数量太大" },
					{ LangDef.ZHHK.getValue(), "訂單數量太大" } }),
	AYERS_INSUFFICIENT_TRADING_LIMIT(33018, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Request Rejected. Insufficient Limit Or Rule Violated Purchase Limit" },
					{ LangDef.ZH.getValue(), "请求被拒，交易限额或购买力不足" },
					{ LangDef.ZHHK.getValue(), "請求被拒，交易限額或購買力不足" } }),
	AYERS_INSUFFICIENT_PRODUCT_QTY(33019, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Request Rejected. Insufficient product quantity for sell" },
					{ LangDef.ZH.getValue(), "请求被拒，可售卖的股票数量不足" },
					{ LangDef.ZHHK.getValue(), "請求被拒，可售賣的股票數量不足" } }),
	AYERS_PWD_MIN_DIGIT_LENGTH(33020, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password must have at least 2 digit" },
					{ LangDef.ZH.getValue(), "密码必须至少 2 位数字" },
					{ LangDef.ZHHK.getValue(), "密碼必須至少 2 位數字" } }),
	AYERS_PWD_MIN_LETTER_LENGTH(33021, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password must have at least 2 alphabetic character" },
					{ LangDef.ZH.getValue(), "密码必须至少包含 2 个字母字符" },
					{ LangDef.ZHHK.getValue(), "密碼必須至少包含 2 個字母字符" } }),
	AYERS_PWD_NO_UPPER_LETTER(33022, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password must have at least 1 uppercase character" },
					{ LangDef.ZH.getValue(), "密码必须至少有 1 个大写字符" },
					{ LangDef.ZHHK.getValue(), "密碼必須至少有 1 個大寫字符" } }),
	AYERS_PWD_NO_LOWER_LETTER(33023, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password must have at least 1 lowercase character" },
					{ LangDef.ZH.getValue(), "密码必须至少有 1 个小写字符" },
					{ LangDef.ZHHK.getValue(), "密碼必須至少有 1 個小寫字符" } }),
	AYERS_PWD_RANGE_VALUE(33024, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password length is incorrect" },
					{ LangDef.ZH.getValue(), "密码长度不正确" },
					{ LangDef.ZHHK.getValue(), "密碼長度不正確" } }),
	AYERS_UNKNOWN_REJECT_REASON(33025, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Unknown order reject reason. Please contact us for more information" },
					{ LangDef.ZH.getValue(), "订单拒绝原因未知。请与我们联系以获取更多信息" },
					{ LangDef.ZHHK.getValue(), "訂單拒絕原因未知。 請與我們聯繫以獲取更多信息" } }),
	AYERS_ORDER_TYPE_NOT_PERMITTED(33026, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Auction order type not permitted durning non-auction time" },
					{ LangDef.ZH.getValue(), "非竞价期间不允许使用竞价订单类型" },
					{ LangDef.ZHHK.getValue(), "非競價期間不允許使用競價訂單類型" } }),
	AYERS_INVALID_ORDER_PRICE(33027, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Invalid order price, price cannot be below best bid price/above best ask price" },
					{ LangDef.ZH.getValue(), "订单价格无效，价格不能低于最佳买价/高于最佳卖价" },
					{ LangDef.ZHHK.getValue(), "訂單價格無效，價格不能低於最佳買價/高於最佳賣價" } }),
	AYERS_AUCTION_PRICE_LIMIT(33028, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Order rejected due to auction price limits" },
					{ LangDef.ZH.getValue(), "由于竞价价格限制，订单被拒绝" },
					{ LangDef.ZHHK.getValue(), "由於競價價格限制，訂單被拒絕" } }),
	AYERS_PWD_IN_HISTORY(33029, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "New Password Which Is Same As Last 3 Old Password(s) Cannot Be Used" },
					{ LangDef.ZH.getValue(), "不能使用与最近 3 个旧密码相同的新密码" },
					{ LangDef.ZHHK.getValue(), "不能使用與最近 3 個舊密碼相同的新密碼" } }),
	AYERS_UNKNOWN_CANCEL_REASON(33030, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Unknown order cancel reason. Please contact us for more information" },
					{ LangDef.ZH.getValue(), "订单取消原因未知。请与我们联系以获取更多信息" },
					{ LangDef.ZHHK.getValue(), "訂單取消原因未知。 請與我們聯繫以獲取更多信息" } }),
	AYERS_ORDER_DAY_END_CANCEL(33031, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Order day end cancel" },
					{ LangDef.ZH.getValue(), "订单日结束取消" },
					{ LangDef.ZHHK.getValue(), "訂單日結束取消" } }),
	AYERS_UNSOLICITED_ORDER_CANCEL(33032, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Unsolicited order cancel" },
					{ LangDef.ZH.getValue(), "订单被交易所取消" },
					{ LangDef.ZHHK.getValue(), "訂單被交易所取消" } }),
	AYERS_USER_ORDER_CANCEL(33033, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Order cancelled by user" },
					{ LangDef.ZH.getValue(), "訂單被用戶取消" },
					{ LangDef.ZHHK.getValue(), "訂單被用戶取消" } }),
	AYERS_INACTIVE_USER_LOGIN(33034, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system account has been suspended, has not been logged in for too long" },
					{ LangDef.ZH.getValue(), "交易系统客户被暂停使用，太久没有登录" },
					{ LangDef.ZHHK.getValue(), "交易系統客戶被暫停使用，太久沒有登入" } }),
	AYERS_PWD_EXPIRED(33035, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system client password expired" },
					{ LangDef.ZH.getValue(), "交易系统客户密码过期" },
					{ LangDef.ZHHK.getValue(), "交易系統客戶密碼過期" } }),
	AYERS_INVALID_ORDER_ACTION(33036, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Cannot Perform Update Action on Cancelled Order" },
					{ LangDef.ZH.getValue(), "不能更改已取消的订单" },
					{ LangDef.ZHHK.getValue(), "不能更改已取消的訂單" } }),
	AYERS_EDIT_ORDER_FAIL(33037, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system edit order failed" },
					{ LangDef.ZH.getValue(), "Trade system edit order failed" },
					{ LangDef.ZHHK.getValue(), "交易系統更改訂單失敗" } }),
	AYERS_CANCEL_ORDER_FAIL(33038, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system cancel order failed" },
					{ LangDef.ZH.getValue(), "交易系统更改订单失败" },
					{ LangDef.ZHHK.getValue(), "交易系統取消訂單失敗" } }),
	AYERS_USER_LOGIN_FORCE_CHANGE_PW(33039, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Password has expired, force to change the password" },
					{ LangDef.ZH.getValue(), "密码已过期。强制修改密码" },
					{ LangDef.ZHHK.getValue(), "密碼已過期。強制修改密碼" } }),
	AYERS_FEATURE_NOT_ENABLED(33040, MessageType.ERROR,
						new String[][] { { LangDef.EN.getValue(), "The feature is not enabled" },
					{ LangDef.ZH.getValue(), "交易系统不支持此功能" },
					{ LangDef.ZHHK.getValue(), "交易系統不支持此功能" } }),
	AYERS_PRODUCT_NOT_FOUND(33041, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system product not found" },
		{ LangDef.ZH.getValue(), "交易系统产品不存在" },
		{ LangDef.ZHHK.getValue(), "交易系統產品不存在" } }),
	AYERS_NO_ACTIVE_PRODUCT(33042, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Product is suspended" },
		{ LangDef.ZH.getValue(), "产品暂停买卖" },
		{ LangDef.ZHHK.getValue(), "產品暫停買賣" } }),
	AYERS_MARKET_ORDER_NOT_SUPPORT(33043, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Market order is not supported for this product at this moment" },
		{ LangDef.ZH.getValue(), "此产品暂时不支持市价单" },
		{ LangDef.ZHHK.getValue(), "此產品暫時不支持市價單" } }),
	AYERS_EXCHANGE_CLOSED(33044, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Exchange is closed, please try again later." },
		{ LangDef.ZH.getValue(), "交易市场已关闭，请稍后再试" },
		{ LangDef.ZHHK.getValue(), "交易市場已關閉，請稍後再試" } }),
	AYERS_DUPLICATE_IPO_ORDER(33045, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO subscription already confirmed" },
		{ LangDef.ZH.getValue(), "IPO认购已经确认" },
		{ LangDef.ZHHK.getValue(), "IPO認購已經確認" } }),
	AYERS_INCORRECT_VALUE(33046, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Incorrect value" },
		{ LangDef.ZH.getValue(), "数值错误" },
		{ LangDef.ZHHK.getValue(), "數值錯誤" } }),
	AYERS_NO_RECORD_FOUND(33047, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "No record found" },
		{ LangDef.ZH.getValue(), "找不到纪录" },
		{ LangDef.ZHHK.getValue(), "找不到紀錄" } }),
	AYERS_IPO_APP_CLOSED(33048, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO Application already closed" },
		{ LangDef.ZH.getValue(), "IPO申购时间已完结" },
		{ LangDef.ZHHK.getValue(), "IPO申購時間已完結" } }),
	AYERS_IPO_LOAN_AMOUNT_TOO_LARGE(33049, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO application loan amount is larger than max allowed loan amount. Please decrease the loan amount." },
		{ LangDef.ZH.getValue(), "IPO申购融资金额大于融资最高限额，请减少融资金额" },
		{ LangDef.ZHHK.getValue(), "IPO申購融資金額大於融資最高限額，請減少融資金額" } }),
	AYERS_IPO_LOAN_AMOUNT_TOO_SMALL(33050, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO application loan amount is smaller than min allowed loan amount. Please increase the loan amount." },
		{ LangDef.ZH.getValue(), "IPO申购融资金额少于融资最低限额，请增加融资金额" },
		{ LangDef.ZHHK.getValue(), "IPO申購融資金額少於融資最低限額，請增加融資金額" } }),
	AYERS_IPO_LOAN_FACILITY_IS_FULL(33051, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Loan pool for this IPO is full, no loan application is allowed." },
		{ LangDef.ZH.getValue(), "IPO申购融资借贷池已满，不能提供融资申购" },
		{ LangDef.ZHHK.getValue(), "IPO申購融資借貸池已滿，不能提供融資申購" } }),
	AYERS_INSUFFICIENT_FUND_TO_APPLY(33052, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Insufficient fund to apply for IPO" },
		{ LangDef.ZH.getValue(), "申购IPO资金不足" },
		{ LangDef.ZHHK.getValue(), "申購IPO資金不足" } }),
	AYERS_IPO_APP_LOAN_CLOSED(33053, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO Loan Application already closed" },
		{ LangDef.ZH.getValue(), "IPO融资申购时间已完结" },
		{ LangDef.ZHHK.getValue(), "IPO融資申購時間已完結" } }),
	AYERS_IPO_APPLY_QTY_TOO_LARGE(33054, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO application apply quantity is larger than max allowed apply quantity. Please decrease the apply quantity." },
		{ LangDef.ZH.getValue(), "IPO申购数量大于最高限额，请减少申购数量" },
		{ LangDef.ZHHK.getValue(), "IPO申購數量大於最高限額，請減少申購數量" } }),
	AYERS_IPO_APPLY_QTY_TOO_SMALL(33055, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO application apply quantity is smaller than min allowed apply quantity. Please increase the apply quantity." },
		{ LangDef.ZH.getValue(), "IPO申购数量少于最低限额，请增加申购数量" },
		{ LangDef.ZHHK.getValue(), "IPO申購數量少於最低限額，請增加申購數量" } }),
	AYERS_IPO_NOT_FOUND(33056, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "IPO stock id not found" },
		{ LangDef.ZH.getValue(), "IPO ID不存在" },
		{ LangDef.ZHHK.getValue(), "IPO ID不存在" } }),
	AYERS_SECOND_FACTOR_LOGIN_NOT_SUPPORT(33057, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system second factor login not support" },
		{ LangDef.ZH.getValue(), "交易系统二次验证登录不支持" },
		{ LangDef.ZHHK.getValue(), "交易系統二次驗證登錄不支援" } }),
	AYERS_SECOND_FACTOR_LOGIN_INCORRECT(33058, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade system second factor login incorrect" },
		{ LangDef.ZH.getValue(), "交易系统二次验证登录不正确" },
		{ LangDef.ZHHK.getValue(), "交易系統二次驗證登錄不正確" } }),
	AYERS_INSUFFICIENT_FUND_WITHDRAW(33059, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Insufficient fund to withdraw" },
		{ LangDef.ZH.getValue(), "资金不足，无法出金" },
		{ LangDef.ZHHK.getValue(), "資金不足，無法出金" } }),
	AYERS_NOT_ALLOWED_TO_TRADE_THIS_PRO(33060, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Not allowed to trade this product. Please contact us for more information" },
		{ LangDef.ZH.getValue(), "没有权限交易此产品。请与我们联系以获取更多信息" },
		{ LangDef.ZHHK.getValue(), "沒有權限交易此產品。 請與我們聯繫以獲取更多信息" } }),
	
	// 34000 - 34500 for trading related
	TRADE_ORDER_UNCOMFIRMED(34000, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade Order already placed, waiting for confirmation" },
					{ LangDef.ZH.getValue(), "交易订单未确认" },
					{ LangDef.ZHHK.getValue(), "交易订单已下达，等待确认中" } }),
	TRADE_ORDER_ALREADY_PLACED(34001, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade Order already placed" },
					{ LangDef.ZH.getValue(), "相同交易订单已下达" },
					{ LangDef.ZHHK.getValue(), "相同交易訂單已下達" } }),
	TRADE_ORDER_NOT_FOUND(34002, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade Order not found" },
					{ LangDef.ZH.getValue(), "未找到交易订单" },
					{ LangDef.ZHHK.getValue(), "未找到交易訂單" } }),
	TRADE_ORDER_ALREADY_COMPLETED(34003, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade Order already completed" },
					{ LangDef.ZH.getValue(), "订单已完成" },
					{ LangDef.ZHHK.getValue(), "訂單已完成" } }),
	TRADE_ACCOUNT_NOT_FOUND(34004, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade account not found" },
					{ LangDef.ZH.getValue(), "交易帐户不存在" },
					{ LangDef.ZHHK.getValue(), "交易帳戶不存在" } }),
	TRADE_MARKET_NOT_SUPPORT(34005, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade market not support" },
					{ LangDef.ZH.getValue(), "交易市场不支持" },
					{ LangDef.ZHHK.getValue(), "交易市場不支持" } }),
	SYMBOL_UNKNOWN(34006, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Unknown Stock Symbol" },
					{ LangDef.ZH.getValue(), "未知标的代码" },
					{ LangDef.ZHHK.getValue(), "未知標的股票代碼" } }),
	CLIENT_ACCOUNT_NOT_FOUND(34007, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Client account not found" },
					{ LangDef.ZH.getValue(), "未找到客户帐户" },
					{ LangDef.ZHHK.getValue(), "未找到客戶帳戶" } }),
	MISSING_TRADE_SYMBOL(34008, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing trade symbol" },
					{ LangDef.ZH.getValue(), "缺少股票代号" },
					{ LangDef.ZHHK.getValue(), "缺少股票代號" } }),
	INCORRECT_TRADE_SYMBOL(34009, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Incorrect trade symbol" },
					{ LangDef.ZH.getValue(), "股票代号不正确" },
					{ LangDef.ZHHK.getValue(), "股票代號不正確" } }),
	MISSING_ORDER_TYPE(34010, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing order type" },
					{ LangDef.ZH.getValue(), "缺少订单类型" },
					{ LangDef.ZHHK.getValue(), "缺少訂單類型" } }),
	INCORRECT_ORDER_TYPE(34011, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Incorrect order type" },
					{ LangDef.ZH.getValue(), "订单类型不正确" },
					{ LangDef.ZHHK.getValue(), "訂單類型不正確" } }),
	MISSING_ORDER_PRICE(34012, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing order price" },
					{ LangDef.ZH.getValue(), "缺少订单价格" },
					{ LangDef.ZHHK.getValue(), "缺少訂單價格" } }),
	INCORRECT_ORDER_PRICE(34013, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Incorrect order price" },
					{ LangDef.ZH.getValue(), "订单价格不正确" },
					{ LangDef.ZHHK.getValue(), "訂單價格不正確" } }),
	MISSING_ORDER_QTY(34014, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing order quantity" },
					{ LangDef.ZH.getValue(), "缺少订单数量" },
					{ LangDef.ZHHK.getValue(), "缺少訂單數量" } }),
	INCORRECT_ORDER_QTY(34015, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Incorrect order quantity" },
					{ LangDef.ZH.getValue(), "订单数量不正确" },
					{ LangDef.ZHHK.getValue(), "訂單數量不正確" } }),
	UNSUPPORTED_STOCK_CURRENCY(34016, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Unsupported stock currency" },
					{ LangDef.ZH.getValue(), "不支持的股票货币" },
					{ LangDef.ZHHK.getValue(), "不支持的股票貨幣" } }),
	MISSING_ORDER_ID(34017, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing order id" },
					{ LangDef.ZH.getValue(), "缺少订单 ID" },
					{ LangDef.ZHHK.getValue(), "缺少訂單 ID" } }),
	MISSING_DATE(34018, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Missing date" },
					{ LangDef.ZH.getValue(), "缺少日期" },
					{ LangDef.ZHHK.getValue(), "缺少日期" } }),
	INVALID_DATE(34019, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Invalid date, the day range should not be more than 1 year" },
					{ LangDef.ZH.getValue(), "无效日期，日期范围不得超过1年" },
					{ LangDef.ZHHK.getValue(), "無效日期，日期範圍不得超過1年" } }),
	TRADE_ACCOUNT_STATUS_INVALID(34020, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trading account status is invalid for operation"},
			{LangDef.ZH.getValue(), "交易账户状态对操作无效"},
			{LangDef.ZHHK.getValue(), "交易帳戶狀態對操作無效"}}),
	TRADE_ACCOUNT_NOT_ACTIVE_STATE(34021, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trade account is not in active state"},
			{LangDef.ZH.getValue(), "交易帐户未处于活动状态"},
			{LangDef.ZHHK.getValue(), "交易帳戶未處於活動狀態"}}),
	TRADE_ACCOUNT_EMAIL_PHONE_NUMBER_NOT_MATCH(34022, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trade account phone number/email is inconsistent with the existing account, please contact CS to change it."},
			{LangDef.ZH.getValue(), "交易帐户电话/电邮与现有帐户不一致，请联络CS更改"},
			{LangDef.ZHHK.getValue(), "交易帳戶電話/電郵與現有帳戶不一致，請聯絡CS更改"}}),
	TRADE_ACCOUNT_ALREADY_BOUND(34023, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trade account Id has already been bound"},
			{LangDef.ZH.getValue(), "交易帐户ID已被绑定"},
			{LangDef.ZHHK.getValue(), "交易帳戶ID已被綁定"}}),
	TRADE_POSITION_NOT_FOUND(34024, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Trade position not found" },
					{ LangDef.ZH.getValue(), "未找到股票持仓" },
					{ LangDef.ZHHK.getValue(), "未找到股票持倉" } }),
	DOWNSTREAM_SERVICE_UNAVAILABLE(34025, MessageType.ERROR,
			new String[][] { { LangDef.EN.getValue(), "Downstream service unavailable" },
					{ LangDef.ZH.getValue(), "下游服务暂时无法使用" },
					{ LangDef.ZHHK.getValue(), "下游服務暫時無法使用" } }),
	BOUND_ONLY_ONE_TRADE_ACCOUNT(34026, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Only one trading account can be bound"},
			{LangDef.ZH.getValue(), "交易帐户只能绑定一个"},
			{LangDef.ZHHK.getValue(), "交易帳戶只能綁定一個"}}),
	UNSUPPORTED_TRADE_ACCOUNT_BINDING(34027, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The trading account is currently not supported binding"},
			{LangDef.ZH.getValue(), "交易账户暂不支持绑定"},
			{LangDef.ZHHK.getValue(), "交易帳戶暫不支援綁定"}}),
	INVALID_TRADE_ACCOUNT_VERIFICATION_CODE(34028, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The trading account verification code is incorrect"},
			{LangDef.ZH.getValue(), "交易账户验证码不正确"},
			{LangDef.ZHHK.getValue(), "交易帳戶驗證碼不正確"}}),
	INVALID_TIME_IN_FORCE(34029, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Invalid time in force"},
			{LangDef.ZH.getValue(), "错误的交易有效期限"},
			{LangDef.ZHHK.getValue(), "錯誤的交易有效期限"}}),
	INVALID_EXPIRY_DATE(34030, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Invalid expiry date"},
			{LangDef.ZH.getValue(), "错误的交易到期日"},
			{LangDef.ZHHK.getValue(), "錯誤的交易到期日"}}),
	REDUNDANT_EXPIRY_DATE(34031, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Redundant expiry date"},
			{LangDef.ZH.getValue(), "多馀的交易到期日"},
			{LangDef.ZHHK.getValue(), "多餘的交易到期日"}}),
	MISSING_TRADE_SESSION_ID(34032, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Missing trade session id"},
			{LangDef.ZH.getValue(), "缺少交易认证ID"},
			{LangDef.ZHHK.getValue(), "缺少交易認證ID"}}),
	TRADE_ACCOUNT_CATEGORY_NOT_MATCH(34033, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trade account category cannot be bound to existing account."},
			{LangDef.ZH.getValue(), "交易账户类别不能与现有账户绑定"},
			{LangDef.ZHHK.getValue(), "交易帳戶類別不能與現有帳戶綁定"}}),
	TRADE_ACCOUNT_ID_DOC_NUM_NOT_MATCH(34034, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "Trade account ID document number is inconsistent with the existing account, please contact CS."},
			{LangDef.ZH.getValue(), "交易账户ID证件号码与现有账户不一致，请联系CS"},
			{LangDef.ZHHK.getValue(), "交易帳戶ID證件號碼與現有帳戶不一致，請聯絡CS"}}),
	TRADE_ACCOUNT_DOC_OR_ID_PWD_INCORRECT(34035, MessageType.ERROR, 
			new String[][]{{LangDef.EN.getValue(), "The trading account ID document number, account ID or password is incorrect."},
			{LangDef.ZH.getValue(), "交易账户ID证件号码、账户ID或密码不正确"},
			{LangDef.ZHHK.getValue(), "交易帳號ID證件號碼、帳號ID或密碼不正確"}}),
	
	// 35000 - 35500 for ns
	FAIL_SEND_SLACK(35001, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Fail to send Slack message"},
			{LangDef.ZH.getValue(), "发送Slack消息失败"},
			{LangDef.ZHHK.getValue(), "發送Slack消息失敗"}}),
	SAME_TEMPLATE_EXIST(35002, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "NONE"},
			{LangDef.ZH.getValue(), "已经创建了具有相同名称和地点的电子邮件模板。"},
			{LangDef.ZHHK.getValue(), "已經創建了具有相同名稱和地點的電子郵件模板。"}}),
	SMS_TIMEOUT(35003, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Sms cannot been sent until it is expired"},
			{LangDef.ZH.getValue(), "短信在过期前不能被发送"},
			{LangDef.ZHHK.getValue(), "短信在過期前不能被發送"}}),
	SMS_VERIFICATION_CODE_SENT(35004, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Sms verification cannot be sent until 60s timeout expired"},
			{LangDef.ZH.getValue(), "在60秒超时前不能发送短信验证"},
			{LangDef.ZHHK.getValue(), "在60秒超時前不能發送短信驗證"}}),
	TEMPLATE_NOT_FOUND(35005, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Template not found"},
					{LangDef.ZH.getValue(), "找不到模板"},
					{LangDef.ZHHK.getValue(), "找不到模板"}}),
	SELECTED_STOCKS_EXCEEDS_LIMIT(35006, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Number of selected stocks exceeds limit!"},
					{LangDef.ZH.getValue(), "自选股数量超限"},
					{LangDef.ZHHK.getValue(), "自選股數量超限"}}),
	DEFAULT_GROUP_NAME_CANNOT_BE_CHANGED(35007, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Default group name cannot be changed!"},
					{LangDef.ZH.getValue(), "默认分组名称不可更改"},
					{LangDef.ZHHK.getValue(), "默認分組名稱不可更改"}}),
	DEFAULT_GROUPS_CANNOT_BE_DELETED(35008, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Default groups cannot be deleted!"},
					{LangDef.ZH.getValue(), "不可删除默认分组"},
					{LangDef.ZHHK.getValue(), "不可刪除默認分組"}}),
	ILLEGAL_GROUP_NAME(35009, MessageType.ERROR,
			new String[][]{{LangDef.EN.getValue(), "Illegal group name!"},
					{LangDef.ZH.getValue(), "分组名称不合法"},
					{LangDef.ZHHK.getValue(), "分組名稱唔合法"}}),
	
	// 36000 - 36500 for cyanspring market insightfin
	INVALID_LANGUAGE_VALUE(36000, MessageType.ERROR, new String[][]{
			{LangDef.EN.getValue(), "Invalid language value. Supported values are: ZH, EN, ZHHK."},
			{LangDef.ZH.getValue(), "语言值无效。支持的值为：ZH，EN，ZHHK。"},
			{LangDef.ZHHK.getValue(), "語言值無效。支持的值為：ZH，EN，ZHHK。"}}),
	INVALID_PERIOD_VALUE(36001, MessageType.ERROR, new String[][]{
			{LangDef.EN.getValue(), "Invalid period value. Supported values are:.A, Q, I, F"},
			{LangDef.ZH.getValue(), "日期类型无效。支持的值为：A, Q, I, F。"},
			{LangDef.ZHHK.getValue(), "日期類型無效。支持的值為：A, Q, I, F。"}}),
	
	// 36500 - 37000 for ipo subscription
	IPO_INFO_UPDATED(36500, MessageType.ERROR, new String[][]{
		{LangDef.EN.getValue(), "IPO Info updated. Please refresh."},
		{LangDef.ZH.getValue(), "IPO资讯已更新, 请刷新"},
		{LangDef.ZHHK.getValue(), "IPO資訊已更新, 請刷新"}}),
	IPO_APPLICATION_LOAN_RATIO_NOT_SUPPORT(36501, MessageType.ERROR, new String[][]{
		{LangDef.EN.getValue(), "Loan ratio not support"},
		{LangDef.ZH.getValue(), "不支持目前贷款比例"},
		{LangDef.ZHHK.getValue(), "不支持目前貸款比例"}}),
	IPO_APPLY_QUANTITY_NOT_SUPPORT(36502, MessageType.ERROR, new String[][]{
		{LangDef.EN.getValue(), "Apply quantity not support"},
		{LangDef.ZH.getValue(), "不支持目前IPO申购数量"},
		{LangDef.ZHHK.getValue(), "不支持目前IPO申購數量"}}),
	ACCOUNT_BALANCE_INSUFFICIENT(36503, MessageType.ERROR, new String[][]{
		{LangDef.EN.getValue(), "Account balance insufficient"},
		{LangDef.ZH.getValue(), "帐户余额不足"},
		{LangDef.ZHHK.getValue(), "帳戶餘額不足"}}),
	
	// 37000 - 37500 for market data plan subscription
	MARKET_DATA_PRODUCT_NOT_FOUND(37001, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Market data plan not found"},
			{LangDef.ZH.getValue(), "行情报价计划不存在"},
			{LangDef.ZHHK.getValue(), "行情報價計劃不存在"}}),
	PLAN_SUBSCRIPTION_NOT_FOUND(37002, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Plan Subscription not found"},
		{LangDef.ZH.getValue(), "报价计划订阅不存在"},
		{LangDef.ZHHK.getValue(), "報價計劃訂閱不存在"}}),
	ACCOUNT_HAS_INSUFFICIENT_BALANCE(37003, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Account has insufficient balance"},
		{LangDef.ZH.getValue(), "账户余额不足"},
		{LangDef.ZHHK.getValue(), "帳戶餘額不足"}}),
	ACCOUNT_HAS_SUBSCRIBED_SAME_PRODUCT(37004, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Account has subscribed same product"},
		{LangDef.ZH.getValue(), "帐户已订阅同类型的计划"},
		{LangDef.ZHHK.getValue(), "帳戶已訂閱同類型的計劃"}}),
//	MARKET_PLAN_SUBSCRIPTION_REQUEST_NOT_FOUND(37005, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Market plan subscription request not found"},
//		{LangDef.ZH.getValue(), "行情报价计划订阅申请不存在"},
//		{LangDef.ZHHK.getValue(), "行情報價計劃訂閱申請不存在"}}),
	AUTO_RENEWAL_CANCELLATION_HAVE_TO_SUBMIT_ONE_DAY_BEFORE_END(37006, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Auto-renewal cancellation request have to submit 1 day before the next payment date"},
		{LangDef.ZH.getValue(), "自动续订取消请求必须在下一个付款日期前一天提交"},
		{LangDef.ZHHK.getValue(), "自動續訂取消請求必須在下一個付款日期前一天提交"}}),
	FREE_OR_DISCOUNTED_PLAN_CANNOT_BE_AUTORENEWED(37007, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Free or discounted plan cannot be auto renewed"},
		{LangDef.ZH.getValue(), "免费或折扣计划无法自动续订"},
		{LangDef.ZHHK.getValue(), "免費或折扣計劃無法自動續訂"}}),
	FREE_OR_DISCOUNTED_PLAN_MUSH_HAVE_END_DATE(37008, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Free or discounted plan must have a start and end date"},
		{LangDef.ZH.getValue(), "免费或折扣计划必须有开始及完结日期"},
		{LangDef.ZHHK.getValue(), "免費或折扣計劃必須有開始及完結日期"}}),
//	MARKET_PLAN_SUBSCRIPTION_NOT_FOUND(37009, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Market plan subscription not found"},
//		{LangDef.ZH.getValue(), "行情报价计划订阅记录不存在"},
//		{LangDef.ZHHK.getValue(), "行情報價計劃訂閱記錄不存在"}}),
	PAYMENT_RECORD_NOT_FOUND(37010, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Subscription payment not found"},
		{LangDef.ZH.getValue(), "付款记录不存在"},
		{LangDef.ZHHK.getValue(), "付款記錄不存在"}}),
	INVALID_START_END_DATE(37011, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "Invalid start end date"},
		{LangDef.ZH.getValue(), "开始结束日期不正确"},
		{LangDef.ZHHK.getValue(), "開始結束日期不正確"}}),
	NOT_OPEN_TO_PROFESSIONAL_INVESTOR(37012, MessageType.ERROR, new String[][]{{LangDef.EN.getValue(), "The market data product is not open to professional investor"},
		{LangDef.ZH.getValue(), "此报价计划不开放专业投资者申请"},
		{LangDef.ZHHK.getValue(), "此報價計劃不開放專業投資者申請"}}),
	
	// 40000 - 40500 for MMK social account related
	
	;
	private int code; 
	private MessageType type;
	private HashMap<String, String> langText = new HashMap<String, String>();
	private void validateText() throws Exception {
		for(String text: langText.values()) {
			if(text.contains("|"))
				throw new Exception("Message can't contain '|': " + text);

		}
	}

	Message(int code, MessageType type, String[][] langTexts) {
		this.code = code;
		this.type = type;
		for(String[] pair: langTexts) {
			langText.put(pair[0], pair[1]);
		}
	}

	public int getCode() {
		return this.code;
	}
	
	public String getText(String lang) {
		return langText.get(lang);
	}
	
	public String getText() {
		return langText.get(SystemDefault.getLanguage());
	}
	
	public String getLangText(LangDef langDef) {
		return langText.get(langDef.getValue());
	}
	
	public Map<String, String> getLangText() {
		return langText;
	}
	
	public String toString(String lang) {
		String txt = langText.get(lang);
		return "" + this.code + "|" + this.type + "|" + txt; 
	}

	@Override
	public String toString() {
		return toString(SystemDefault.getLanguage());
	}
	
	// static
	
	static private HashMap<Integer, Message> map = new  HashMap<Integer, Message>();
	
	static private String getKey(int code, String lang) {
		return "" + code + "-" + lang;
	}
	
	static private void addMessage(Message message, String lang, String text) throws Exception {
	}
	
	static public Message get(int code) {
		return map.get(code);
	}
	
	static public void validate() throws Exception {
		for(Message msg: Message.values()) {
			if(map.containsKey(msg.getCode()))
				throw new Exception("Message code already exists: " + msg.getCode());
			
			msg.validateText();
			map.put(new Integer(msg.getCode()), msg);
		}
		
	}
	
	public static void main(String args[]) throws Exception {
	}
}
